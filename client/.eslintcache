[{"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\index.js":"1","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\store.js":"2","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\App.js":"3","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Header.js":"4","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\reducers\\userReducers.js":"5","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Footer.js":"6","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\LandingScreen.js":"7","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyCourseScreen.js":"8","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyScreen.js":"10","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\ScreenHeader.js":"11","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\MaterialIcon.js":"12","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\userActions.js":"13","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\courseActions.js":"14","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseTableOfContent.js":"15","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseRecap.js":"16","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseHeader.js":"17","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseNav.js":"18","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\userConstants.js":"19","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courses.js":"20","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\utils.js":"21","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\course.js":"22","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\courseConstants.js":"23","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionHeader.js":"24","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\stockMarketCourse.js":"25","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\investingCourse.js":"26","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionNav.js":"27","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section1.js":"28","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section1.js":"29","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section2.js":"30","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section3.js":"31","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionContainer.js":"32","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\DragAndDrop.js":"33","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleExerciseStats.js":"34","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleQuestionnary.js":"35","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\TextList.js":"36","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\sectionNav.js":"37","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\TrainingStatus.js":"38","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordion.js":"39","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\chartOptions.js":"40","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\InputGroup.js":"41","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\colors.js":"42","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ResultCard.js":"43","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseCompleted.js":"44","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseScore.js":"45","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExcersiseQuiz.js":"46","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordionDetails.js":"47","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleTerm.js":"48","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButton.js":"49","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButtonPrimary.js":"50","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Sliders.js":"51","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\ShowMore.js":"52","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section2.js":"53","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ShareExample.js":"54"},{"size":295,"mtime":1607526662415,"results":"55","hashOfConfig":"56"},{"size":472,"mtime":1607526662418,"results":"57","hashOfConfig":"56"},{"size":1945,"mtime":1607930894748,"results":"58","hashOfConfig":"56"},{"size":2210,"mtime":1608100702429,"results":"59","hashOfConfig":"56"},{"size":561,"mtime":1607526662416,"results":"60","hashOfConfig":"56"},{"size":183,"mtime":1607771802310,"results":"61","hashOfConfig":"56"},{"size":391,"mtime":1607526662417,"results":"62","hashOfConfig":"56"},{"size":2692,"mtime":1608102071112,"results":"63","hashOfConfig":"56"},{"size":591,"mtime":1607705601644,"results":"64","hashOfConfig":"56"},{"size":1617,"mtime":1607705541413,"results":"65","hashOfConfig":"56"},{"size":785,"mtime":1607705839714,"results":"66","hashOfConfig":"56"},{"size":2280,"mtime":1608195187177,"results":"67","hashOfConfig":"56"},{"size":809,"mtime":1608100714550,"results":"68","hashOfConfig":"56"},{"size":545,"mtime":1608099856081,"results":"69","hashOfConfig":"56"},{"size":1327,"mtime":1608102304410,"results":"70","hashOfConfig":"56"},{"size":2609,"mtime":1608102964289,"results":"71","hashOfConfig":"56"},{"size":192,"mtime":1608062414012,"results":"72","hashOfConfig":"56"},{"size":4200,"mtime":1608184344131,"results":"73","hashOfConfig":"56"},{"size":198,"mtime":1607526662411,"results":"74","hashOfConfig":"56"},{"size":3587,"mtime":1608186177288,"results":"75","hashOfConfig":"56"},{"size":1010,"mtime":1608014768424,"results":"76","hashOfConfig":"56"},{"size":2495,"mtime":1608061032481,"results":"77","hashOfConfig":"56"},{"size":196,"mtime":1607703316724,"results":"78","hashOfConfig":"56"},{"size":1230,"mtime":1607930716501,"results":"79","hashOfConfig":"56"},{"size":111,"mtime":1608185504008,"results":"80","hashOfConfig":"56"},{"size":204,"mtime":1607703316731,"results":"81","hashOfConfig":"56"},{"size":1195,"mtime":1608204931238,"results":"82","hashOfConfig":"56"},{"size":5700,"mtime":1608205253287,"results":"83","hashOfConfig":"56"},{"size":16347,"mtime":1608186476280,"results":"84","hashOfConfig":"56"},{"size":8943,"mtime":1608186483684,"results":"85","hashOfConfig":"56"},{"size":7517,"mtime":1608186495486,"results":"86","hashOfConfig":"56"},{"size":1782,"mtime":1608186847520,"results":"87","hashOfConfig":"56"},{"size":7865,"mtime":1607703316678,"results":"88","hashOfConfig":"56"},{"size":349,"mtime":1607703316655,"results":"89","hashOfConfig":"56"},{"size":1054,"mtime":1607327655431,"results":"90","hashOfConfig":"56"},{"size":1172,"mtime":1608189076613,"results":"91","hashOfConfig":"56"},{"size":395,"mtime":1607866434286,"results":"92","hashOfConfig":"56"},{"size":249,"mtime":1607327655445,"results":"93","hashOfConfig":"56"},{"size":1603,"mtime":1608061357789,"results":"94","hashOfConfig":"56"},{"size":1503,"mtime":1607860522971,"results":"95","hashOfConfig":"56"},{"size":3224,"mtime":1607930755844,"results":"96","hashOfConfig":"56"},{"size":296,"mtime":1607857188644,"results":"97","hashOfConfig":"56"},{"size":318,"mtime":1607878253549,"results":"98","hashOfConfig":"56"},{"size":865,"mtime":1608102119700,"results":"99","hashOfConfig":"56"},{"size":1399,"mtime":1608101602298,"results":"100","hashOfConfig":"56"},{"size":10600,"mtime":1608205428352,"results":"101","hashOfConfig":"56"},{"size":3934,"mtime":1608048366755,"results":"102","hashOfConfig":"56"},{"size":443,"mtime":1608061146186,"results":"103","hashOfConfig":"56"},{"size":535,"mtime":1608184675910,"results":"104","hashOfConfig":"56"},{"size":736,"mtime":1608122723451,"results":"105","hashOfConfig":"56"},{"size":539,"mtime":1608128026927,"results":"106","hashOfConfig":"56"},{"size":1924,"mtime":1608205381046,"results":"107","hashOfConfig":"56"},{"size":8424,"mtime":1608205131627,"results":"108","hashOfConfig":"56"},{"size":1401,"mtime":1608201360830,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1u71inl",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\index.js",[],["222","223"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\store.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\App.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Header.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Footer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\LandingScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyCourseScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\ScreenHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\MaterialIcon.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\courseActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseTableOfContent.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseRecap.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courses.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\utils.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\course.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\courseConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\stockMarketCourse.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\investingCourse.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section1.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section1.js",["224"],"import React,{useState,useEffect} from 'react'\r\nimport SectionContainer from '../../../components/Section/SectionContainer'\r\nimport { Line } from 'react-chartjs-2'\r\nimport TextList from '../../../components/Article/TextList'\r\nimport ArticleAccordion from '../../../components/Article/ArticleAccordion'\r\nimport { lineChartOptions, assetChartOptions } from '../../../utils/chartOptions'\r\nimport InputGroup from '../../../components/Example/InputGroup'\r\nimport { formatNumber } from '../../../utils/utils';\r\nimport { colors } from '../../../utils/colors'\r\nimport ResultCard from '../../../components/Example/ResultCard'\r\nimport ExerciseQuiz from '../../../components/Exercise/ExcersiseQuiz';\r\n\r\nexport default function AssetsAndLiabilities({section,completeSection}){ \r\n\r\n    const questions=[\r\n        {id:1,question:'Bond is asset',options:['True','False','Both'],answer:'True',userAnswer:null},\r\n        {id:2,question:'Car is',options:['Asset','Liability','None'],answer:'Liability',userAnswer:null},\r\n        {id:3,question:'Reinvesting dividends accelerates compounding',options:['True','False'],answer:'True',userAnswer:null},\r\n        {id:4,question:'Stock is',options:['Asset','Liability'],answer:'Asset',userAnswer:null},\r\n        {id:5,question:'Car insurance is',options:['Variable Cost','Fixed Cost'],answer:'Fixed Cost',userAnswer:null},\r\n        {id:6,question:'Car gas is',options:['Variable Cost','Fixed Cost','Temperary Cost'],answer:'Variable Cost',userAnswer:null},\r\n        {id:7,question:'Boat is',options:['Asset','Liability'],answer:'Liability',userAnswer:null},            \r\n    ]\r\n\r\n    const sectionComponents = [\r\n        {name:'OverView',article: OverView},\r\n        {name:'Asset',article: Asset},\r\n        {name:'Liability',article: Liability},\r\n        {name:'Exercise',article:ExerciseQuiz,props:{section,completeSection,questions}}\r\n    ]\r\n\r\n    return(\r\n        <SectionContainer \r\n            sectionComponents={sectionComponents} \r\n            section={section} \r\n            completeSection={completeSection}\r\n        />\r\n    )\r\n}\r\n\r\nfunction OverView(){\r\n    const [startDemo,setStartDemo] = useState(false)\r\n    const [options,setOptions] = useState({})\r\n    const [chartData,setChartData] = useState({\r\n        assetData:[],\r\n        liabilityData:[],\r\n        labels:[],\r\n        interest:0,\r\n        totalLiability:0,\r\n        depreciation:0,\r\n        gas:0,\r\n        insurance:0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        \r\n        let newLabels = []\r\n        let data=[]\r\n\r\n        for(var i=0;i<120;i+=3){\r\n            let date = new Date()\r\n            date.setMonth(date.getMonth() + i);\r\n            let year=date.getFullYear()\r\n            let month = date.getMonth()\r\n            newLabels.push(month+'/'+year)\r\n            data.push(1000+(i*100))\r\n        }\r\n        setChartData({...chartData,labels:newLabels})\r\n        setOptions(lineChartOptions)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    const data = {\r\n        labels: chartData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Asset (6% annual interest)',\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.assetData,\r\n          },\r\n          {\r\n            label: 'Liability (car)',\r\n            fill: false,\r\n            borderColor: 'rgba(222, 115, 115,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.liabilityData,\r\n          }\r\n        ]\r\n      };\r\n\r\n    const demoStartHandler=()=>{\r\n\r\n        setStartDemo(true)\r\n\r\n        let asset = 10000\r\n        let liability = 10000\r\n        let gas = 0\r\n        let insurance = 0\r\n\r\n        for(let i=0; i<=120; i+=3) {\r\n            setTimeout(() => {\r\n                let assetDataCopy=[...chartData.assetData]\r\n                let liabilityDataCopy=[...chartData.liabilityData]\r\n                assetDataCopy.push(asset)\r\n                liabilityDataCopy.push(liability+gas+insurance)\r\n\r\n                setChartData({\r\n                    ...chartData,\r\n                    assetData:assetDataCopy,\r\n                    liabilityData:liabilityDataCopy,\r\n                    interest:asset-10000,\r\n                    totalLiability:liability+gas+insurance,\r\n                    depreciation:liability-10000,\r\n                    gas,\r\n                    insurance\r\n                })\r\n                asset*=1.015\r\n                liability-=liability*0.025\r\n                gas-=375\r\n                insurance-=225\r\n            }, 30 * i);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div>\r\n            <TextList\r\n                content={[\r\n                    {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    {header:'Liabilities',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            </div>\r\n            {startDemo &&\r\n            <>\r\n            <div>\r\n                <div className='chartContainer'>\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='aalDemoResult'>\r\n                <h3>Asset vs liability in 10 years</h3>\r\n                <ul >\r\n                    <li>\r\n                        <h3>Asset</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Initial Investment:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Interest (6% year): </p> \r\n                                <p>{chartData.interest.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.interest+10000).toFixed(2)}</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Liability</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Car price:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Depreciation (10% year): </p> \r\n                                <p>{chartData.depreciation.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Gas (1500$ year : </p> \r\n                                <p>{(chartData.gas).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Insurance (900$ year): </p> \r\n                                <p>{(chartData.insurance).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.totalLiability).toFixed(2)}</h3>\r\n                            </li>                        \r\n                        </ul>\r\n                    </li>\r\n                </ul>                \r\n            </div>     \r\n            </>   \r\n            }                 \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Asset(){\r\n\r\n    const [chartData,setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Deposits',\r\n                data: [],\r\n                backgroundColor: colors.secondaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,                \r\n                borderWidth: 1\r\n            },\r\n            {\r\n                label: 'Interest',\r\n                data: [],\r\n                backgroundColor: colors.positiveColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1\r\n            },\r\n            {\r\n                type:'bar',\r\n                label: 'Yearly Interest',\r\n                data: [],\r\n                backgroundColor: colors.primaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                barPercentage: 0.6\r\n                \r\n            }\r\n        ]\r\n    })\r\n\r\n    const [inputs,setInputs] = useState({\r\n        startingInvestment:{value:10000,type:'slider',min:0,max:100000,step:1000,format:'€'},\r\n        annualReturn:{value:7,type:'slider',min:0,max:20,step:0.5,format:'%'},\r\n        monthlyDeposits:{value:200,type:'slider',min:0,max:2000,step:50,format:'€'},\r\n        timePeriod:{value:10,type:'slider',min:1,max:30,step:1,format:'Y'},\r\n    })\r\n\r\n    const [results,setResults] = useState({\r\n        deposits:0,\r\n        interest:0,\r\n        total:0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let newLabels = []\r\n        let data=[]\r\n        let depositData=[]\r\n        let interestData=[]\r\n        let yearlyInterestData=[]\r\n        let startingValue = inputs.startingInvestment.value\r\n        const annualReturn = inputs.annualReturn.value\r\n        const monthlyDeposits = inputs.monthlyDeposits.value\r\n        const timePeriod = inputs.timePeriod.value\r\n        let deposits = startingValue\r\n        for(var i=0;i<=timePeriod;i++){\r\n            let label = `Year ${i}`\r\n            if(i===0) label=''\r\n            newLabels.push(label)\r\n            startingValue+=(monthlyDeposits*12) \r\n            deposits+=(monthlyDeposits*12)          \r\n            data.push(startingValue)\r\n            depositData.push(deposits)\r\n            interestData.push(startingValue-deposits)\r\n            yearlyInterestData.push(startingValue*((annualReturn/100)+1)-startingValue)\r\n            startingValue*=((annualReturn/100)+1)\r\n        }\r\n\r\n        let total = data[data.length-1]\r\n        const chartCopy=chartData\r\n        chartCopy.datasets[0].data=depositData\r\n        chartCopy.datasets[1].data=interestData\r\n        chartCopy.datasets[2].data=yearlyInterestData\r\n        setChartData({...chartCopy,labels:newLabels})\r\n        setResults({\r\n            deposits:formatNumber(deposits,'€'),\r\n            interest:formatNumber((total-deposits),'€'),\r\n            total:formatNumber(total,'€')\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputs])\r\n\r\n    const content = [\r\n        {header:'Compound Interest',text:'Compound interest is result of reinvesting interest rather than paying it out.'},\r\n        {header:'ReInvesting',text:'Reinvesting dividends and interest fastens the compounding effect'},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div> \r\n                <TextList\r\n                    content={[\r\n                        {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    ]}\r\n                /> \r\n                <ArticleAccordion content={content}/>\r\n            </div>\r\n            <div className='chartContainer'>\r\n                <Line data={chartData} options={assetChartOptions(true)} />\r\n            </div>\r\n            <div className='example'>                \r\n                <InputGroup header={'Asset example'} inputs={inputs} setInputs={setInputs}/>\r\n                <ResultCard header={`Result after ${inputs.timePeriod.value} years`} value={results.total} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Liability(){\r\n\r\n    const [chartData,setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Car value',\r\n                data: [],\r\n                backgroundColor: 'rgba(82, 103, 122,0.5)',\r\n                pointRadius:0,\r\n                pointHitRadius:0,                \r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Gas',\r\n                data: [],\r\n                backgroundColor: colors.negativeColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Insurance',\r\n                data: [],\r\n                backgroundColor: colors.negativeColor1,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Total Cost',\r\n                data: [],\r\n                borderColor:colors.secondaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 3,\r\n                fill:false,\r\n                stack: 2,\r\n            }\r\n        ]\r\n    })\r\n\r\n    const [inputs,setInputs] = useState({\r\n        carPrice:{value:10000,type:'slider',min:0,max:100000,step:1000,format:'€'},\r\n        depreciationPerYear:{value:10,type:'slider',min:0,max:30,step:0.5,format:'%'},\r\n        gasPerYear:{value:1200,type:'slider',min:0,max:5000,step:50,format:'€'},\r\n        insuranceCostPerYear:{value:900,type:'slider',min:0,max:2000,step:50,format:'€'},\r\n    })\r\n\r\n    const [results,setResults] = useState({\r\n        totalCost:0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let carPrice= inputs.carPrice.value\r\n        let depreciationPerYear = inputs.depreciationPerYear.value\r\n        let gasPerYear = inputs.gasPerYear.value\r\n        let insuranceCostPerYear = inputs.insuranceCostPerYear.value\r\n\r\n        let newLabels = []        \r\n        let liability = carPrice\r\n        let gas = -0.1\r\n        let insurance = -0.1\r\n        let liabilityData = []\r\n        let gasData = []\r\n        let insuranceData = []\r\n        let total=[]\r\n\r\n        for(let i=0; i<=10; i++) {\r\n            let label = `Year ${i}`\r\n            if(i===0) label=''\r\n            newLabels.push(label)\r\n            liabilityData.push(liability)\r\n            gasData.push(gas)\r\n            insuranceData.push(insurance)\r\n            total.push(-(carPrice-liability)+gas+insurance-gas)\r\n            liability-=liability*(depreciationPerYear/100)\r\n            gas-=gasPerYear\r\n            insurance-=insuranceCostPerYear\r\n            insurance-=gasPerYear         \r\n        }\r\n\r\n        const chartCopy={...chartData}\r\n        chartCopy.datasets[0].data=liabilityData\r\n        chartCopy.datasets[1].data=gasData\r\n        chartCopy.datasets[2].data=insuranceData\r\n        chartCopy.datasets[3].data=total\r\n        setChartData({...chartCopy,labels:newLabels})\r\n        let totalCost = total[total.length-1]\r\n        setResults({\r\n            totalCost:formatNumber(totalCost,'€'),\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputs])\r\n\r\n    const content = [\r\n        {header:'Depreciation',text:'Decrease of item value'},\r\n        {header:'Fixed Cost',text:''},\r\n        {header:'Variable Cost',text:''},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div> \r\n                <TextList\r\n                    content={[\r\n                        {header:'Assets',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    ]}\r\n                /> \r\n                <ArticleAccordion content={content}/>\r\n            </div>\r\n            <div className='chartContainer'>\r\n                <Line data={chartData} options={assetChartOptions(false)} />\r\n            </div>\r\n            <div className='example'>                \r\n                <InputGroup header={'Liability (Car)'} inputs={inputs} setInputs={setInputs}/>\r\n                <ResultCard header={`Total costs in 10 years`} value={results.totalCost} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section2.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section3.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionContainer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\DragAndDrop.js",[],["225","226"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleExerciseStats.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleQuestionnary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\TextList.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\sectionNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\TrainingStatus.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordion.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\chartOptions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\InputGroup.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\colors.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ResultCard.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseCompleted.js",["227"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExerciseScore from './ExerciseScore'\r\nimport ArticleButton from '../Article/ArticleButton'\r\n\r\nexport default function ExerciseCompleted({section,tryAgain}) {\r\n    return (\r\n        <Card className='exerciseCompleted'>\r\n            <div className='exerciseCompletedHeader'>\r\n                <h2>Exercise Completed</h2>\r\n                <Chip label={`Completed ${section.completedAt.replaceAll('/','.')}`} variant=\"outlined\" />\r\n            </div>\r\n            <ExerciseScore section={section}/>\r\n            <div className='exerciseCompletedFooter'>\r\n                <Button onClick={tryAgain} color=\"primary\" variant=\"outlined\">Try Again</Button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseScore.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExcersiseQuiz.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordionDetails.js",["228","229","230","231","232"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleTerm.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButton.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButtonPrimary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Sliders.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\ShowMore.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section2.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ShareExample.js",[],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":105,"column":24,"nodeType":"239","messageId":"240","endLine":125,"endColumn":14},{"ruleId":"233","replacedBy":"241"},{"ruleId":"235","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":21},{"ruleId":"243","severity":1,"message":"247","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":12},{"ruleId":"243","severity":1,"message":"248","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":24},{"ruleId":"243","severity":1,"message":"249","line":10,"column":8,"nodeType":"245","messageId":"246","endLine":10,"endColumn":12},{"ruleId":"243","severity":1,"message":"250","line":11,"column":8,"nodeType":"245","messageId":"246","endLine":11,"endColumn":14},{"ruleId":"243","severity":1,"message":"251","line":12,"column":8,"nodeType":"245","messageId":"246","endLine":12,"endColumn":15},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'asset', 'liability', 'gas', 'insurance', 'asset', 'liability', 'gas', 'insurance', 'liability', 'gas', 'insurance', 'asset', 'liability', 'liability', 'gas', 'insurance'.","ArrowFunctionExpression","unsafeRefs",["252"],["253"],"no-unused-vars","'ArticleButton' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'AccordionActions' is defined but never used.","'Chip' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]