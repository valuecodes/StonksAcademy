[{"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\index.js":"1","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\store.js":"2","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\App.js":"3","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Header.js":"4","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\reducers\\userReducers.js":"5","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Footer.js":"6","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\LandingScreen.js":"7","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyCourseScreen.js":"8","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyScreen.js":"10","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\ScreenHeader.js":"11","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\MaterialIcon.js":"12","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\userActions.js":"13","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\courseActions.js":"14","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseTableOfContent.js":"15","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseRecap.js":"16","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseHeader.js":"17","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseNav.js":"18","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\userConstants.js":"19","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courses.js":"20","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\utils.js":"21","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\course.js":"22","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\courseConstants.js":"23","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionHeader.js":"24","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\stockMarketCourse.js":"25","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\investingCourse.js":"26","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionNav.js":"27","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section1.js":"28","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section1.js":"29","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section2.js":"30","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section3.js":"31","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionContainer.js":"32","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\DragAndDrop.js":"33","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleExerciseStats.js":"34","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleQuestionnary.js":"35","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\TextList.js":"36","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\sectionNav.js":"37","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\TrainingStatus.js":"38","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordion.js":"39","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\chartOptions.js":"40","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\InputGroup.js":"41","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\colors.js":"42","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ResultCard.js":"43","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseCompleted.js":"44","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseScore.js":"45","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExcersiseQuiz.js":"46","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordionDetails.js":"47","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleTerm.js":"48","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButton.js":"49","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButtonPrimary.js":"50","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Sliders.js":"51","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\ShowMore.js":"52"},{"size":295,"mtime":1607526662415,"results":"53","hashOfConfig":"54"},{"size":472,"mtime":1607526662418,"results":"55","hashOfConfig":"54"},{"size":1945,"mtime":1607930894748,"results":"56","hashOfConfig":"54"},{"size":2210,"mtime":1608100702429,"results":"57","hashOfConfig":"54"},{"size":561,"mtime":1607526662416,"results":"58","hashOfConfig":"54"},{"size":183,"mtime":1607771802310,"results":"59","hashOfConfig":"54"},{"size":391,"mtime":1607526662417,"results":"60","hashOfConfig":"54"},{"size":2692,"mtime":1608102071112,"results":"61","hashOfConfig":"54"},{"size":591,"mtime":1607705601644,"results":"62","hashOfConfig":"54"},{"size":1617,"mtime":1607705541413,"results":"63","hashOfConfig":"54"},{"size":785,"mtime":1607705839714,"results":"64","hashOfConfig":"54"},{"size":1866,"mtime":1608124853623,"results":"65","hashOfConfig":"54"},{"size":809,"mtime":1608100714550,"results":"66","hashOfConfig":"54"},{"size":545,"mtime":1608099856081,"results":"67","hashOfConfig":"54"},{"size":1327,"mtime":1608102304410,"results":"68","hashOfConfig":"54"},{"size":2609,"mtime":1608102964289,"results":"69","hashOfConfig":"54"},{"size":192,"mtime":1608062414012,"results":"70","hashOfConfig":"54"},{"size":4197,"mtime":1608064806273,"results":"71","hashOfConfig":"54"},{"size":198,"mtime":1607526662411,"results":"72","hashOfConfig":"54"},{"size":3583,"mtime":1608057380479,"results":"73","hashOfConfig":"54"},{"size":1010,"mtime":1608014768424,"results":"74","hashOfConfig":"54"},{"size":2495,"mtime":1608061032481,"results":"75","hashOfConfig":"54"},{"size":196,"mtime":1607703316724,"results":"76","hashOfConfig":"54"},{"size":1230,"mtime":1607930716501,"results":"77","hashOfConfig":"54"},{"size":50,"mtime":1607703316733,"results":"78","hashOfConfig":"54"},{"size":204,"mtime":1607703316731,"results":"79","hashOfConfig":"54"},{"size":1226,"mtime":1607866092326,"results":"80","hashOfConfig":"54"},{"size":16693,"mtime":1608138389098,"results":"81","hashOfConfig":"54"},{"size":16450,"mtime":1608103528274,"results":"82","hashOfConfig":"54"},{"size":9046,"mtime":1608061496716,"results":"83","hashOfConfig":"54"},{"size":7620,"mtime":1608133654129,"results":"84","hashOfConfig":"54"},{"size":1784,"mtime":1608064244877,"results":"85","hashOfConfig":"54"},{"size":7865,"mtime":1607703316678,"results":"86","hashOfConfig":"54"},{"size":349,"mtime":1607703316655,"results":"87","hashOfConfig":"54"},{"size":1054,"mtime":1607327655431,"results":"88","hashOfConfig":"54"},{"size":1144,"mtime":1608124864618,"results":"89","hashOfConfig":"54"},{"size":395,"mtime":1607866434286,"results":"90","hashOfConfig":"54"},{"size":249,"mtime":1607327655445,"results":"91","hashOfConfig":"54"},{"size":1603,"mtime":1608061357789,"results":"92","hashOfConfig":"54"},{"size":1503,"mtime":1607860522971,"results":"93","hashOfConfig":"54"},{"size":3224,"mtime":1607930755844,"results":"94","hashOfConfig":"54"},{"size":296,"mtime":1607857188644,"results":"95","hashOfConfig":"54"},{"size":318,"mtime":1607878253549,"results":"96","hashOfConfig":"54"},{"size":865,"mtime":1608102119700,"results":"97","hashOfConfig":"54"},{"size":1399,"mtime":1608101602298,"results":"98","hashOfConfig":"54"},{"size":11348,"mtime":1608134473350,"results":"99","hashOfConfig":"54"},{"size":3934,"mtime":1608048366755,"results":"100","hashOfConfig":"54"},{"size":443,"mtime":1608061146186,"results":"101","hashOfConfig":"54"},{"size":532,"mtime":1608061334997,"results":"102","hashOfConfig":"54"},{"size":736,"mtime":1608122723451,"results":"103","hashOfConfig":"54"},{"size":539,"mtime":1608128026927,"results":"104","hashOfConfig":"54"},{"size":2342,"mtime":1608138062736,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1u71inl",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\index.js",[],["217","218"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\store.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\App.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Header.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Footer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\LandingScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyCourseScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\ScreenHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\MaterialIcon.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\courseActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseTableOfContent.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseRecap.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courses.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\utils.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\course.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\courseConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\stockMarketCourse.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\investingCourse.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section1.js",["219","220","221","222","223","224"],"import React,{useState,useEffect} from 'react'\r\nimport SectionContainer from '../../../components/Section/SectionContainer'\r\nimport MaterialIcon from '../../../components/MaterialIcon'\r\nimport ArticleExerciseStats from '../../../components/Article/ArticleExerciseStats'\r\nimport TextList from '../../../components/Article/TextList'\r\nimport ArticleQuestionnary from '../../../components/Article/ArticleQuestionnary'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { InputSlider } from '../../../components/Other/Sliders'\r\nimport Card from '@material-ui/core/Card';\r\nimport ArticleAccordion from '../../../components/Article/ArticleAccordion'\r\nimport ExerciseQuiz from '../../../components/Exercise/ExcersiseQuiz'\r\nimport ShowMore from '../../../components/Other/ShowMore'\r\n\r\nexport default function Share({section,completeSection}){\r\n\r\n    // const [questions, setQuestions] = useState([\r\n    //     {\r\n    //         id:1,\r\n    //         parameters:[{name:'Share Price',value:10},{name:'Share Count',value:10}],\r\n    //         solve:{name:'Market Cap',value:''},\r\n    //         result:100\r\n    //     },\r\n    //     {\r\n    //         id:2,\r\n    //         parameters:[{name:'Share Count',value:5},{name:'Market Cap',value:200}],\r\n    //         solve:{name:'Share Price',value:''},\r\n    //         result:10\r\n    //     },\r\n    //     {\r\n    //         id:3,\r\n    //         parameters:[{name:'Market Cap',value:300},{name:'Share Price',value:15}],\r\n    //         solve:{name:'Share Count',value:''},\r\n    //         result:20\r\n    //     },\r\n    // ])\r\n\r\n    const questions=[\r\n        {\r\n            id:1,\r\n            question:'Share price is 10$ and share count 10pcs. What is the market cap?',\r\n            slider:{max:250,step:10,format:'$'},\r\n            answer:100,\r\n            userAnswer:null\r\n        },          \r\n        {\r\n            id:2,\r\n            question:'Number of shares affects the market cap',\r\n            options:['True','False'],           \r\n            answer:'False',\r\n            userAnswer:null\r\n        },          \r\n        {\r\n            id:3,\r\n            question:'Share count is 5pcs and Market cap 200pcs. How much is the share price?',\r\n            slider:{max:15,step:1,format:'$'},            \r\n            answer:10,\r\n            userAnswer:null\r\n        },          \r\n        {\r\n            id:4,\r\n            question:'One share is miniature version of the whole company',\r\n            options:['True','False'],           \r\n            answer:'True',\r\n            userAnswer:null\r\n        },          \r\n        {\r\n            id:5,\r\n            question:'Market cap is 300$ and share price 15$. How many shares outstanding there are?',\r\n            slider:{max:25,step:1,format:'pcs'},            \r\n            answer:20,\r\n            userAnswer:null\r\n        },          \r\n    ]\r\n\r\n\r\n    const sectionComponents = [\r\n        {name:'Overview',article: Overview},\r\n        {name:'Example',article: Example},\r\n        {name:'Exercise',article: ExerciseQuiz,props:{section,completeSection,questions}},\r\n        // {name:'Practice',article: SharePractice},\r\n        // {name:'Exercise1',article: ShareExercise,props:{section,completeArticle}} \r\n    ]\r\n\r\n    return(\r\n        <div id={section.sectionId} className='sectionContainer'>\r\n            <SectionContainer \r\n                sectionComponents={sectionComponents} \r\n                section={section} \r\n                completeSection={completeSection}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Example(){\r\n\r\n    const[company,setCompany] = useState({\r\n        sharePrice:15,\r\n        shareCount:60,\r\n        marketCap:900,\r\n    })\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const demoStartHandler = () =>{\r\n        setStartDemo(!startDemo)\r\n    }\r\n\r\n    const shareCountHandler=(e,value)=>{\r\n        // const { value } = e.target\r\n        let marketCap = company.sharePrice*company.shareCount\r\n        let sharePrice = (marketCap/+value)\r\n        if(marketCap>1200) return\r\n        if(sharePrice>20) return\r\n        setCompany({...company,sharePrice:sharePrice,shareCount:+value})\r\n    }\r\n\r\n    const sharePriceHandler = (e,value) =>{\r\n        let marketCap = +value*company.shareCount\r\n        if(marketCap>1200) return\r\n        setCompany({...company,sharePrice:+value})\r\n    }\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    return(\r\n        <div className='sectionGrid1'>\r\n            <div className='exampleGrid'>\r\n                <Card>\r\n                        <div className='shareExample'>\r\n                            <h2>Share</h2>\r\n                            <div className='companyContainer'\r\n                                style={{transform:`scale(${company.sharePrice/10})`}}\r\n                            >\r\n                            <MaterialIcon icon='BusinessIcon' className='businessIcon'/> \r\n                            </div>\r\n                            <div className='shareExampleInput'>\r\n                                <label>Share Price: </label>\r\n                                <h3 className='shareExampleNumber'>{(company.sharePrice).toFixed(2)}$</h3>                           \r\n                            </div>\r\n                            <InputSlider\r\n                                min={1}\r\n                                max={20} \r\n                                value={company.sharePrice}     \r\n                                onChange={sharePriceHandler}                                             \r\n                            />\r\n                        </div>                             \r\n                        <ShowMore text={'Share price affects the market cap'}/>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <div className='shareExample'>\r\n                        <h2>Company</h2>\r\n                        <div className='companyContainer'\r\n                            style={{\r\n                                transform:`scale(${company.sharePrice/10})`,\r\n                                width:50+(company.shareCount/2)+'%'\r\n                            }}\r\n                        >\r\n                            {[ ...Array(company.shareCount).keys()].map((item,index) =>\r\n                                <MaterialIcon key={index} icon='BusinessIcon' className='businessIcon'/> \r\n                            )}\r\n                        </div>\r\n                        <div className='shareExampleInput'>\r\n                            <label>Shares Outstanding: </label>\r\n                            <h3 className='shareExampleNumber'>{company.shareCount}pcs</h3>   \r\n                        </div>\r\n                        <InputSlider\r\n                            min={10}\r\n                            max={100} \r\n                            value={company.shareCount}     \r\n                            onChange={shareCountHandler}                                             \r\n                        />\r\n                    </div>\r\n                    <ShowMore text={\"Number of shares doesn't affect the market cap. Just like pizza the company can be divided in the 4 or 8 pieces but the total size doesn't grow\"}/>\r\n                </Card>\r\n                <Card>                                                                    \r\n                    <div className='shareExample'>\r\n                        <h2>Market Cap</h2>\r\n                        <div className='companyContainer'\r\n                            style={{transform:`scale(${(company.sharePrice*company.shareCount)/75})`}}\r\n                        >\r\n                        <MaterialIcon icon='BusinessIcon' className='businessIcon'/> \r\n                        </div>\r\n                        <h3 className='shareExampleNumber'>\r\n                            {(company.sharePrice*company.shareCount).toFixed(0)}$\r\n                        </h3>\r\n                    </div>      \r\n                    <ShowMore text={\"Market Cap = Share price * Shares outstanding\"}/>\r\n                </Card>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Overview(){\r\n    return(\r\n        <div className='sectionGrid2'>\r\n            <TextList\r\n                content={[\r\n                    {\r\n                        header:'Share',\r\n                        text:'One share is like the whole company in miniature size.'\r\n                    },\r\n                    {\r\n                        header:'Shares outstanding',\r\n                        text:'Number of shares the company has. Company can be dividend in to many pieces but it doesnt affect the company value'},\r\n                    {\r\n                        header:'Market Cap',\r\n                        text:'Market Cap is the total market value of the company. If you wanted buy the whole company (all of the shares) this is how much it would cost',\r\n                        formula:'Market Cap = Share price * Shares Outstanding'\r\n                    },\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ShareExercise({section,completeArticle}){\r\n\r\n    const [score,setScore] = useState({\r\n        total:0,\r\n        wrong:0,\r\n        correct:0,\r\n        notAnswered:0,\r\n    })    \r\n\r\n    useEffect(()=>{\r\n        if(section.score){\r\n            setScore(section.score)\r\n        }\r\n    },[section])\r\n\r\n    const [questions, setQuestions] = useState([\r\n        {id:1,parameters:[{name:'Share Price',value:10},{name:'Share Count',value:10}],solve:{name:'Market Cap',value:''},result:100},\r\n        {id:2,parameters:[{name:'Share Count',value:5},{name:'Market Cap',value:200}],solve:{name:'Share Price',value:''},result:10},\r\n        {id:3,parameters:[{name:'Market Cap',value:300},{name:'Share Price',value:15}],solve:{name:'Share Count',value:''},result:20},\r\n    ])\r\n\r\n    const setQuestionAswerHandler = (e,id) =>{\r\n        const { value } = e.target\r\n        let questionIndex = questions.findIndex(item => item.id===id)\r\n        let qCopy = [...questions]\r\n        qCopy[questionIndex].solve.value = +value\r\n        setQuestions(qCopy)\r\n    }\r\n\r\n    const completeExerciseHandler = () => {\r\n        let result={\r\n            total:0,\r\n            wrong:0,\r\n            correct:0,\r\n            notAnswered:0,\r\n        }\r\n        questions.forEach(item =>{\r\n            result.total++\r\n            if(typeof item.solve.value==='number'){\r\n                if(item.solve.value===item.result){\r\n                    result.correct++\r\n                }else{\r\n                    result.wrong++\r\n                }\r\n            }else{\r\n                result.notAnswered++\r\n            }\r\n        })\r\n        setScore(result)\r\n\r\n        completeArticle(section.id,result)\r\n    }\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <div className='articleExerciseHeader'>\r\n                <h2>Solve the following questions</h2>\r\n            </div>\r\n            <ArticleQuestionnary questions={questions} setQuestionAswer={setQuestionAswerHandler} readOnly={section.completed}/>\r\n            <ArticleResults section={section} completeExercise={completeExerciseHandler} score={score}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ArticleResults({section,completeExercise, score}){\r\n    return(\r\n        <div className='articleResults'>\r\n            {!section.completed&&\r\n                <button onClick={completeExercise} className='button'>\r\n                    Complete Exercise\r\n                </button>            \r\n            }\r\n            <ArticleExerciseStats score={score}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SharePractice(){\r\n\r\n    const[company,setCompany] = useState({\r\n        sharePrice:15,\r\n        shareCount:60,\r\n        marketCap:900,\r\n    })\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const demoStartHandler = () =>{\r\n        setStartDemo(!startDemo)\r\n    }\r\n\r\n    const shareCountHandler=(e)=>{\r\n        const { value } = e.target\r\n        let marketCap = company.sharePrice*company.shareCount\r\n        let sharePrice = (marketCap/+value)\r\n        if(marketCap>1200) return\r\n        if(sharePrice>20) return\r\n        setCompany({...company,sharePrice:sharePrice,shareCount:+value})\r\n    }\r\n\r\n    const sharePriceHandler = (e) =>{\r\n        const { value } = e.target\r\n        let marketCap = +value*company.shareCount\r\n        if(marketCap>1200) return\r\n        setCompany({...company,sharePrice:+value})\r\n    }\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <TextList\r\n                content={[\r\n                    {\r\n                        header:'Share',\r\n                        text:'One share is like the whole company in miniature size.'\r\n                    },\r\n                    {\r\n                        header:'Shares outstanding',\r\n                        text:'Number of shares the company has. Company can be dividend in to many pieces but it doesnt affect the company value'},\r\n                    {\r\n                        header:'Market Cap',\r\n                        text:'Market Cap is the total market value of the company. If you wanted buy the whole company (all of the shares) this is how much it would cost',\r\n                        formula:'Market Cap = Share price * Shares Outstanding'\r\n                    },\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            {startDemo &&\r\n                <div className='articleExample exampleGrid'>\r\n                    <div className='shareExample'>\r\n                        <h2>Share</h2>\r\n                        <div className='companyContainer'\r\n                            style={{transform:`scale(${company.sharePrice/10})`}}\r\n                        >\r\n                        <MaterialIcon icon='BusinessIcon' className='businessIcon'/> \r\n                        </div>\r\n                        <div className='shareExampleInput'>\r\n                            <label>Share Price: </label>\r\n                            <h3 className='shareExampleNumber'>{(company.sharePrice).toFixed(2)}$</h3>                           \r\n                        </div>\r\n                        <input\r\n                            min={1}\r\n                            max={20} \r\n                            value={company.sharePrice} \r\n                            type='range'\r\n                            onChange={(e)=>sharePriceHandler(e)} \r\n                        /> \r\n                        <ArticleAccordion content={[{header:'test',text:'hello'}]}/>\r\n                        {/* <p>Share price affects the market cap</p> */}\r\n                    </div>\r\n                    <div className='shareExample'>\r\n                        <h2>Company</h2>\r\n                        <div className='companyContainer'\r\n                            style={{\r\n                                transform:`scale(${company.sharePrice/10})`,\r\n                                width:50+(company.shareCount/2)+'%'\r\n                            }}\r\n                        >\r\n                            {[ ...Array(company.shareCount).keys()].map((item,index) =>\r\n                                <MaterialIcon key={index} icon='BusinessIcon' className='businessIcon'/> \r\n                            )}\r\n                        </div>\r\n                        <div className='shareExampleInput'>\r\n                            <label>Shares Outstanding: </label>\r\n                            <h3 className='shareExampleNumber'>{company.shareCount}pcs</h3>   \r\n                        </div>\r\n                        <input \r\n                            onChange={(e)=>shareCountHandler(e)}\r\n                            type='range'\r\n                            min={10}\r\n                            max={100}\r\n                            value={company.shareCount}\r\n                        /> \r\n                        <p>Number of shares doesn't affect the market cap. Just like pizza the company can be divided in the 4 or 8 pieces but the total size doesn't grow</p>\r\n                    </div>\r\n                    <div className='shareExample'>\r\n                        <h2>Market Cap</h2>\r\n                        <div className='companyContainer'\r\n                            style={{transform:`scale(${(company.sharePrice*company.shareCount)/75})`}}\r\n                        >\r\n                        <MaterialIcon icon='BusinessIcon' className='businessIcon'/> \r\n                        </div>\r\n                        <h3 className='shareExampleNumber'>\r\n                            {(company.sharePrice*company.shareCount).toFixed(0)}$\r\n                        </h3>\r\n                    </div>\r\n                </div>            \r\n            \r\n            } \r\n        </div>\r\n    )\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section1.js",["225"],"import React,{useState,useEffect} from 'react'\r\nimport SectionContainer from '../../../components/Section/SectionContainer'\r\nimport { Line } from 'react-chartjs-2'\r\nimport TextList from '../../../components/Article/TextList'\r\nimport ArticleAccordion from '../../../components/Article/ArticleAccordion'\r\nimport { lineChartOptions, assetChartOptions } from '../../../utils/chartOptions'\r\nimport InputGroup from '../../../components/Example/InputGroup'\r\nimport { formatNumber } from '../../../utils/utils';\r\nimport { colors } from '../../../utils/colors'\r\nimport ResultCard from '../../../components/Example/ResultCard'\r\nimport ExerciseQuiz from '../../../components/Exercise/ExcersiseQuiz';\r\n\r\nexport default function AssetsAndLiabilities({section,completeSection}){ \r\n\r\n    const questions=[\r\n        {id:1,question:'Bond is asset',options:['True','False','Both'],answer:'True',userAnswer:null},\r\n        {id:2,question:'Car is',options:['Asset','Liability','None'],answer:'Liability',userAnswer:null},\r\n        {id:3,question:'Reinvesting dividends accelerates compounding',options:['True','False'],answer:'True',userAnswer:null},\r\n        {id:4,question:'Stock is',options:['Asset','Liability'],answer:'Asset',userAnswer:null},\r\n        {id:5,question:'Car insurance is',options:['Variable Cost','Fixed Cost'],answer:'Fixed Cost',userAnswer:null},\r\n        {id:6,question:'Car gas is',options:['Variable Cost','Fixed Cost','Temperary Cost'],answer:'Variable Cost',userAnswer:null},\r\n        {id:7,question:'Boat is',options:['Asset','Liability'],answer:'Liability',userAnswer:null},            \r\n    ]\r\n\r\n    const sectionComponents = [\r\n        {name:'OverView',article: OverView},\r\n        {name:'Asset',article: Asset},\r\n        {name:'Liability',article: Liability},\r\n        {name:'Exercise',article:ExerciseQuiz,props:{section,completeSection,questions}}\r\n    ]\r\n\r\n    return(\r\n        <div id={section.sectionId} className='sectionContainer'>\r\n            <SectionContainer \r\n                sectionComponents={sectionComponents} \r\n                section={section} \r\n                completeSection={completeSection}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction OverView(){\r\n    const [startDemo,setStartDemo] = useState(false)\r\n    const [options,setOptions] = useState({})\r\n    const [chartData,setChartData] = useState({\r\n        assetData:[],\r\n        liabilityData:[],\r\n        labels:[],\r\n        interest:0,\r\n        totalLiability:0,\r\n        depreciation:0,\r\n        gas:0,\r\n        insurance:0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        \r\n        let newLabels = []\r\n        let data=[]\r\n\r\n        for(var i=0;i<120;i+=3){\r\n            let date = new Date()\r\n            date.setMonth(date.getMonth() + i);\r\n            let year=date.getFullYear()\r\n            let month = date.getMonth()\r\n            newLabels.push(month+'/'+year)\r\n            data.push(1000+(i*100))\r\n        }\r\n        setChartData({...chartData,labels:newLabels})\r\n        setOptions(lineChartOptions)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    const data = {\r\n        labels: chartData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Asset (6% annual interest)',\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.assetData,\r\n          },\r\n          {\r\n            label: 'Liability (car)',\r\n            fill: false,\r\n            borderColor: 'rgba(222, 115, 115,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.liabilityData,\r\n          }\r\n        ]\r\n      };\r\n\r\n    const demoStartHandler=()=>{\r\n\r\n        setStartDemo(true)\r\n\r\n        let asset = 10000\r\n        let liability = 10000\r\n        let gas = 0\r\n        let insurance = 0\r\n\r\n        for(let i=0; i<=120; i+=3) {\r\n            setTimeout(() => {\r\n                let assetDataCopy=[...chartData.assetData]\r\n                let liabilityDataCopy=[...chartData.liabilityData]\r\n                assetDataCopy.push(asset)\r\n                liabilityDataCopy.push(liability+gas+insurance)\r\n\r\n                setChartData({\r\n                    ...chartData,\r\n                    assetData:assetDataCopy,\r\n                    liabilityData:liabilityDataCopy,\r\n                    interest:asset-10000,\r\n                    totalLiability:liability+gas+insurance,\r\n                    depreciation:liability-10000,\r\n                    gas,\r\n                    insurance\r\n                })\r\n                asset*=1.015\r\n                liability-=liability*0.025\r\n                gas-=375\r\n                insurance-=225\r\n            }, 30 * i);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div>\r\n            <TextList\r\n                content={[\r\n                    {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    {header:'Liabilities',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            </div>\r\n            {startDemo &&\r\n            <>\r\n            <div>\r\n                <div className='chartContainer'>\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='aalDemoResult'>\r\n                <h3>Asset vs liability in 10 years</h3>\r\n                <ul >\r\n                    <li>\r\n                        <h3>Asset</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Initial Investment:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Interest (6% year): </p> \r\n                                <p>{chartData.interest.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.interest+10000).toFixed(2)}</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Liability</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Car price:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Depreciation (10% year): </p> \r\n                                <p>{chartData.depreciation.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Gas (1500$ year : </p> \r\n                                <p>{(chartData.gas).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Insurance (900$ year): </p> \r\n                                <p>{(chartData.insurance).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.totalLiability).toFixed(2)}</h3>\r\n                            </li>                        \r\n                        </ul>\r\n                    </li>\r\n                </ul>                \r\n            </div>     \r\n            </>   \r\n            }                 \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Asset(){\r\n\r\n    const [chartData,setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Deposits',\r\n                data: [],\r\n                backgroundColor: colors.secondaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,                \r\n                borderWidth: 1\r\n            },\r\n            {\r\n                label: 'Interest',\r\n                data: [],\r\n                backgroundColor: colors.positiveColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1\r\n            },\r\n            {\r\n                type:'bar',\r\n                label: 'Yearly Interest',\r\n                data: [],\r\n                backgroundColor: colors.primaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                barPercentage: 0.6\r\n                \r\n            }\r\n        ]\r\n    })\r\n\r\n    const [inputs,setInputs] = useState({\r\n        startingInvestment:{value:10000,type:'slider',min:0,max:100000,step:1000,format:'€'},\r\n        annualReturn:{value:7,type:'slider',min:0,max:20,step:0.5,format:'%'},\r\n        monthlyDeposits:{value:200,type:'slider',min:0,max:2000,step:50,format:'€'},\r\n        timePeriod:{value:10,type:'slider',min:1,max:30,step:1,format:'Y'},\r\n    })\r\n\r\n    const [results,setResults] = useState({\r\n        deposits:0,\r\n        interest:0,\r\n        total:0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let newLabels = []\r\n        let data=[]\r\n        let depositData=[]\r\n        let interestData=[]\r\n        let yearlyInterestData=[]\r\n        let startingValue = inputs.startingInvestment.value\r\n        const annualReturn = inputs.annualReturn.value\r\n        const monthlyDeposits = inputs.monthlyDeposits.value\r\n        const timePeriod = inputs.timePeriod.value\r\n        let deposits = startingValue\r\n        for(var i=0;i<=timePeriod;i++){\r\n            let label = `Year ${i}`\r\n            if(i===0) label=''\r\n            newLabels.push(label)\r\n            startingValue+=(monthlyDeposits*12) \r\n            deposits+=(monthlyDeposits*12)          \r\n            data.push(startingValue)\r\n            depositData.push(deposits)\r\n            interestData.push(startingValue-deposits)\r\n            yearlyInterestData.push(startingValue*((annualReturn/100)+1)-startingValue)\r\n            startingValue*=((annualReturn/100)+1)\r\n        }\r\n\r\n        let total = data[data.length-1]\r\n        const chartCopy=chartData\r\n        chartCopy.datasets[0].data=depositData\r\n        chartCopy.datasets[1].data=interestData\r\n        chartCopy.datasets[2].data=yearlyInterestData\r\n        setChartData({...chartCopy,labels:newLabels})\r\n        setResults({\r\n            deposits:formatNumber(deposits,'€'),\r\n            interest:formatNumber((total-deposits),'€'),\r\n            total:formatNumber(total,'€')\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputs])\r\n\r\n    const content = [\r\n        {header:'Compound Interest',text:'Compound interest is result of reinvesting interest rather than paying it out.'},\r\n        {header:'ReInvesting',text:'Reinvesting dividends and interest fastens the compounding effect'},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div> \r\n                <TextList\r\n                    content={[\r\n                        {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    ]}\r\n                /> \r\n                <ArticleAccordion content={content}/>\r\n            </div>\r\n            <div className='chartContainer'>\r\n                <Line data={chartData} options={assetChartOptions(true)} />\r\n            </div>\r\n            <div className='example'>                \r\n                <InputGroup header={'Asset example'} inputs={inputs} setInputs={setInputs}/>\r\n                <ResultCard header={`Result after ${inputs.timePeriod.value} years`} value={results.total} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Liability(){\r\n\r\n    const [chartData,setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Car value',\r\n                data: [],\r\n                backgroundColor: 'rgba(82, 103, 122,0.5)',\r\n                pointRadius:0,\r\n                pointHitRadius:0,                \r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Gas',\r\n                data: [],\r\n                backgroundColor: colors.negativeColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Insurance',\r\n                data: [],\r\n                backgroundColor: colors.negativeColor1,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Total Cost',\r\n                data: [],\r\n                borderColor:colors.secondaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 3,\r\n                fill:false,\r\n                stack: 2,\r\n            }\r\n        ]\r\n    })\r\n\r\n    const [inputs,setInputs] = useState({\r\n        carPrice:{value:10000,type:'slider',min:0,max:100000,step:1000,format:'€'},\r\n        depreciationPerYear:{value:10,type:'slider',min:0,max:30,step:0.5,format:'%'},\r\n        gasPerYear:{value:1200,type:'slider',min:0,max:5000,step:50,format:'€'},\r\n        insuranceCostPerYear:{value:900,type:'slider',min:0,max:2000,step:50,format:'€'},\r\n    })\r\n\r\n    const [results,setResults] = useState({\r\n        totalCost:0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let carPrice= inputs.carPrice.value\r\n        let depreciationPerYear = inputs.depreciationPerYear.value\r\n        let gasPerYear = inputs.gasPerYear.value\r\n        let insuranceCostPerYear = inputs.insuranceCostPerYear.value\r\n\r\n        let newLabels = []        \r\n        let liability = carPrice\r\n        let gas = -0.1\r\n        let insurance = -0.1\r\n        let liabilityData = []\r\n        let gasData = []\r\n        let insuranceData = []\r\n        let total=[]\r\n\r\n        for(let i=0; i<=10; i++) {\r\n            let label = `Year ${i}`\r\n            if(i===0) label=''\r\n            newLabels.push(label)\r\n            liabilityData.push(liability)\r\n            gasData.push(gas)\r\n            insuranceData.push(insurance)\r\n            total.push(-(carPrice-liability)+gas+insurance-gas)\r\n            liability-=liability*(depreciationPerYear/100)\r\n            gas-=gasPerYear\r\n            insurance-=insuranceCostPerYear\r\n            insurance-=gasPerYear         \r\n        }\r\n\r\n        const chartCopy={...chartData}\r\n        chartCopy.datasets[0].data=liabilityData\r\n        chartCopy.datasets[1].data=gasData\r\n        chartCopy.datasets[2].data=insuranceData\r\n        chartCopy.datasets[3].data=total\r\n        setChartData({...chartCopy,labels:newLabels})\r\n        let totalCost = total[total.length-1]\r\n        setResults({\r\n            totalCost:formatNumber(totalCost,'€'),\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputs])\r\n\r\n    const content = [\r\n        {header:'Depreciation',text:'Decrease of item value'},\r\n        {header:'Fixed Cost',text:''},\r\n        {header:'Variable Cost',text:''},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div> \r\n                <TextList\r\n                    content={[\r\n                        {header:'Assets',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    ]}\r\n                /> \r\n                <ArticleAccordion content={content}/>\r\n            </div>\r\n            <div className='chartContainer'>\r\n                <Line data={chartData} options={assetChartOptions(false)} />\r\n            </div>\r\n            <div className='example'>                \r\n                <InputGroup header={'Liability (Car)'} inputs={inputs} setInputs={setInputs}/>\r\n                <ResultCard header={`Total costs in 10 years`} value={results.totalCost} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section2.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section3.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionContainer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\DragAndDrop.js",[],["226","227"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleExerciseStats.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleQuestionnary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\TextList.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\sectionNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\TrainingStatus.js",[],["228","229"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordion.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\chartOptions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\InputGroup.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\colors.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ResultCard.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseCompleted.js",["230"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExerciseScore from './ExerciseScore'\r\nimport ArticleButton from '../Article/ArticleButton'\r\n\r\nexport default function ExerciseCompleted({section,tryAgain}) {\r\n    return (\r\n        <Card className='exerciseCompleted'>\r\n            <div className='exerciseCompletedHeader'>\r\n                <h2>Exercise Completed</h2>\r\n                <Chip label={`Completed ${section.completedAt.replaceAll('/','.')}`} variant=\"outlined\" />\r\n            </div>\r\n            <ExerciseScore section={section}/>\r\n            <div className='exerciseCompletedFooter'>\r\n                <Button onClick={tryAgain} color=\"primary\" variant=\"outlined\">Try Again</Button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseScore.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExcersiseQuiz.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordionDetails.js",["231","232","233","234","235"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleTerm.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButton.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleButtonPrimary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Sliders.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\ShowMore.js",["236","237","238","239","240","241","242","243"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height:0,\r\n      maxWidth: 345,\r\n      display:'span'\r\n    },\r\n    actions:{\r\n        marginTop:-60\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    text:{\r\n        textAlign:'center',\r\n        margin:0\r\n    }\r\n  }));\r\n\r\nexport default function ShowMore({text}) {\r\n\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <>\r\n    <CardActions className={classes.actions}>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography className={classes.text} paragraph>\r\n           {text}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":14},{"ruleId":"248","severity":1,"message":"252","line":105,"column":11,"nodeType":"250","messageId":"251","endLine":105,"endColumn":27},{"ruleId":"248","severity":1,"message":"253","line":123,"column":12,"nodeType":"250","messageId":"251","endLine":123,"endColumn":20},{"ruleId":"248","severity":1,"message":"254","line":123,"column":22,"nodeType":"250","messageId":"251","endLine":123,"endColumn":33},{"ruleId":"248","severity":1,"message":"255","line":217,"column":10,"nodeType":"250","messageId":"251","endLine":217,"endColumn":23},{"ruleId":"248","severity":1,"message":"256","line":294,"column":10,"nodeType":"250","messageId":"251","endLine":294,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":107,"column":24,"nodeType":"259","messageId":"260","endLine":127,"endColumn":14},{"ruleId":"244","replacedBy":"261"},{"ruleId":"246","replacedBy":"262"},{"ruleId":"244","replacedBy":"263"},{"ruleId":"246","replacedBy":"264"},{"ruleId":"248","severity":1,"message":"265","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":21},{"ruleId":"248","severity":1,"message":"266","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":12},{"ruleId":"248","severity":1,"message":"267","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":24},{"ruleId":"248","severity":1,"message":"268","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":12},{"ruleId":"248","severity":1,"message":"269","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":14},{"ruleId":"248","severity":1,"message":"270","line":12,"column":8,"nodeType":"250","messageId":"251","endLine":12,"endColumn":15},{"ruleId":"248","severity":1,"message":"271","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":12},{"ruleId":"248","severity":1,"message":"272","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":18},{"ruleId":"248","severity":1,"message":"273","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":17},{"ruleId":"248","severity":1,"message":"274","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":14},{"ruleId":"248","severity":1,"message":"275","line":13,"column":10,"nodeType":"250","messageId":"251","endLine":13,"endColumn":13},{"ruleId":"248","severity":1,"message":"276","line":14,"column":8,"nodeType":"250","messageId":"251","endLine":14,"endColumn":20},{"ruleId":"248","severity":1,"message":"277","line":15,"column":8,"nodeType":"250","messageId":"251","endLine":15,"endColumn":17},{"ruleId":"248","severity":1,"message":"278","line":17,"column":8,"nodeType":"250","messageId":"251","endLine":17,"endColumn":20},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar","'demoStartHandler' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'ShareExercise' is defined but never used.","'SharePractice' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'asset', 'liability', 'gas', 'insurance', 'asset', 'liability', 'gas', 'insurance', 'liability', 'gas', 'insurance', 'asset', 'liability', 'liability', 'gas', 'insurance'.","ArrowFunctionExpression","unsafeRefs",["279"],["280"],["279"],["280"],"'ArticleButton' is defined but never used.","'clsx' is defined but never used.","'AccordionActions' is defined but never used.","'Chip' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]