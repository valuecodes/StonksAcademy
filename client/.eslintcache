[{"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\index.js":"1","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\App.js":"2","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Footer.js":"3","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyScreen.js":"4","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\LandingScreen.js":"5","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Header.js":"6","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\SectionHeader.js":"7","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\MaterialIcon.js":"8","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\DragAndDrop.js":"9","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\utils.js":"10","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\subArticleNav.js":"11","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleHeader.js":"12","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\TextList.js":"13","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleExerciseStats.js":"14","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleRecap.js":"15","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleTableOfContent.js":"16","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleQuestionnary.js":"17","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\TrainingStatus.js":"18","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleSubNav.js":"19","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\store.js":"20","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\reducers\\userReducers.js":"21","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\ProfileScreen.js":"22","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\constants\\userConstants.js":"23","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\actions\\userActions.js":"24","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\actions\\articleActions.js":"25","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\constants\\articleConstants.js":"26","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\course.js":"27","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\CourseNavigation.js":"28","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\courses\\courses.js":"29","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\courses\\stockMarket\\Components.js":"30","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\courses\\investing\\Components.js":"31","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyCourseScreen.js":"32"},{"size":295,"mtime":1607526662415,"results":"33","hashOfConfig":"34"},{"size":1046,"mtime":1607623256765,"results":"35","hashOfConfig":"34"},{"size":245,"mtime":1607327655435,"results":"36","hashOfConfig":"34"},{"size":1620,"mtime":1607631042220,"results":"37","hashOfConfig":"34"},{"size":391,"mtime":1607526662417,"results":"38","hashOfConfig":"34"},{"size":1797,"mtime":1607623373668,"results":"39","hashOfConfig":"34"},{"size":786,"mtime":1607623615780,"results":"40","hashOfConfig":"34"},{"size":1868,"mtime":1607327655438,"results":"41","hashOfConfig":"34"},{"size":7865,"mtime":1607621848074,"results":"42","hashOfConfig":"34"},{"size":450,"mtime":1607327655475,"results":"43","hashOfConfig":"34"},{"size":473,"mtime":1607327655469,"results":"44","hashOfConfig":"34"},{"size":413,"mtime":1607327655429,"results":"45","hashOfConfig":"34"},{"size":1134,"mtime":1607327655433,"results":"46","hashOfConfig":"34"},{"size":349,"mtime":1607581674446,"results":"47","hashOfConfig":"34"},{"size":1570,"mtime":1607612096400,"results":"48","hashOfConfig":"34"},{"size":1173,"mtime":1607612112401,"results":"49","hashOfConfig":"34"},{"size":1054,"mtime":1607327655431,"results":"50","hashOfConfig":"34"},{"size":249,"mtime":1607327655445,"results":"51","hashOfConfig":"34"},{"size":582,"mtime":1607327655433,"results":"52","hashOfConfig":"34"},{"size":472,"mtime":1607526662418,"results":"53","hashOfConfig":"34"},{"size":561,"mtime":1607526662416,"results":"54","hashOfConfig":"34"},{"size":594,"mtime":1607526662418,"results":"55","hashOfConfig":"34"},{"size":198,"mtime":1607526662411,"results":"56","hashOfConfig":"34"},{"size":778,"mtime":1607534966575,"results":"57","hashOfConfig":"34"},{"size":574,"mtime":1607585001266,"results":"58","hashOfConfig":"34"},{"size":196,"mtime":1607532785934,"results":"59","hashOfConfig":"34"},{"size":2361,"mtime":1607621604697,"results":"60","hashOfConfig":"34"},{"size":2449,"mtime":1607623343779,"results":"61","hashOfConfig":"34"},{"size":3583,"mtime":1607631296145,"results":"62","hashOfConfig":"34"},{"size":9180,"mtime":1607620746907,"results":"63","hashOfConfig":"34"},{"size":22090,"mtime":1607623588329,"results":"64","hashOfConfig":"34"},{"size":2388,"mtime":1607623232243,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1n5r2uf",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\index.js",[],["132","133"],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\App.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Footer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\LandingScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Header.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\SectionHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\MaterialIcon.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\DragAndDrop.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\utils.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\subArticleNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\TextList.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleExerciseStats.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleRecap.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleTableOfContent.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleQuestionnary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\TrainingStatus.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleSubNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\store.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\actions\\articleActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\constants\\articleConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\course.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\CourseNavigation.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\courses\\courses.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\courses\\stockMarket\\Components.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\courses\\investing\\Components.js",["134"],"\r\nimport React,{useState,useEffect} from 'react'\r\nimport { SubArticleNav } from '../../utils/subArticleNav'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport TextList from '../../components/Article/TextList'\r\nimport MaterialIcon from '../../components/MaterialIcon'\r\n/* eslint-disable */\r\nimport { datalabels } from 'chartjs-plugin-datalabels'\r\nimport annotation from \"chartjs-plugin-annotation\";\r\n/* eslint-enable */\r\nimport DragAndDrop from '../../components/DragAndDrop'\r\nimport ArticleHeader from '../../components/Article/ArticleHeader'\r\nimport ArticleExerciseStats from '../../components/Article/ArticleExerciseStats'\r\n\r\n\r\nexport function AssetsAndLiabilities({article,completeArticle}){    \r\n\r\n    const [articleSubNav, setArticleSubNav] = useState(new SubArticleNav(['Content','Exercise']))\r\n\r\n    const [score,setScore] = useState({})\r\n    \r\n    const scoreHandler=(newScore)=>{\r\n        setScore(newScore)\r\n        if(newScore.correct===newScore.total){\r\n            completeArticle(article.id,score)\r\n        }\r\n    }\r\n    return(\r\n        <div id={article.articleId} className='articleContainer'>\r\n            <ArticleHeader \r\n                header={'1. Assets and Liabilities'} \r\n                articleSubNav={articleSubNav} \r\n                setArticleSubNav={setArticleSubNav}\r\n            />\r\n            <div className='articleSubPages' style={articleSubNav.subPageStyle(articleSubNav)}>\r\n                <AssetsAndLiabilitiesPractice />\r\n                <AssetsAndLiabilitiesExercise score={score} scoreHandler={scoreHandler} />\r\n            </div>\r\n        </div>  \r\n    ) \r\n}\r\n\r\nfunction AssetsAndLiabilitiesPractice(){\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const [chartData,setChartData] = useState({\r\n        assetData:[],\r\n        liabilityData:[],\r\n        labels:[],\r\n        interest:0,\r\n        totalLiability:0,\r\n        depreciation:0,\r\n        gas:0,\r\n        insurance:0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        \r\n        let newLabels = []\r\n        let data=[]\r\n\r\n        for(var i=0;i<120;i+=3){\r\n            let date = new Date()\r\n            date.setMonth(date.getMonth() + i);\r\n            let year=date.getFullYear()\r\n            let month = date.getMonth()\r\n            newLabels.push(month+'/'+year)\r\n            data.push(1000+(i*100))\r\n        }\r\n        setChartData({...chartData,labels:newLabels})\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    const data = {\r\n        labels: chartData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Asset (6% annual interest)',\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.assetData,\r\n          },\r\n          {\r\n            label: 'Liability (car)',\r\n            fill: false,\r\n            borderColor: 'rgba(222, 115, 115,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.liabilityData,\r\n          }\r\n        ]\r\n      };\r\n\r\n      const lineOptions = {\r\n        responsive:true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    max:20000,\r\n                    min:-20000,\r\n                    autoSkip: true, \r\n                    maxTicksLimit: 5\r\n                }\r\n            }],\r\n            xAxes:[{\r\n                ticks:{\r\n                    autoSkip: true, \r\n                    maxTicksLimit: 5,\r\n                    maxRotation: 0,\r\n                    minRotation: 0\r\n                }\r\n            }]\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n        },\r\n        plugins: {\r\n            datalabels: {\r\n                display:false\r\n            }\r\n          }\r\n      };\r\n\r\n    const demoStartHandler=()=>{\r\n\r\n        setStartDemo(true)\r\n\r\n        let asset = 10000\r\n        let liability = 10000\r\n        let gas = 0\r\n        let insurance = 0\r\n\r\n        for(let i=0; i<=120; i+=3) {\r\n            setTimeout(() => {\r\n                let assetDataCopy=[...chartData.assetData]\r\n                let liabilityDataCopy=[...chartData.liabilityData]\r\n                assetDataCopy.push(asset)\r\n                liabilityDataCopy.push(liability+gas+insurance)\r\n\r\n                setChartData({\r\n                    ...chartData,\r\n                    assetData:assetDataCopy,\r\n                    liabilityData:liabilityDataCopy,\r\n                    interest:asset-10000,\r\n                    totalLiability:liability+gas+insurance,\r\n                    depreciation:liability-10000,\r\n                    gas,\r\n                    insurance\r\n                })\r\n                asset*=1.015\r\n                liability-=liability*0.025\r\n                gas-=375\r\n                insurance-=225\r\n            }, 30 * i);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='aalDemo'>\r\n            <TextList\r\n                content={[\r\n                    {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    {header:'Liabilities',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            <div className='chartContainer'>\r\n                 <Line data={data} options={lineOptions} />\r\n            </div>\r\n           {startDemo &&\r\n            <div className='aalDemoResult'>\r\n                <h2>Asset vs liability in 10 years</h2>\r\n                <ul >\r\n                    <li>\r\n                        <h3>Asset</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Initial Investment:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Interest (6% year): </p> \r\n                                <p>{chartData.interest.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.interest+10000).toFixed(2)}</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Liability</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Car price:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Depreciation (10% year): </p> \r\n                                <p>{chartData.depreciation.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Gas (1500$ year : </p> \r\n                                <p>{(chartData.gas).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Insurance (900$ year): </p> \r\n                                <p>{(chartData.insurance).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.totalLiability).toFixed(2)}</h3>\r\n                            </li>                        \r\n                        </ul>\r\n                    </li>\r\n                </ul>                \r\n            </div>        \r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AssetsAndLiabilitiesExercise({score,scoreHandler}){\r\n    return(\r\n        <div className='dragAndDropExercise articleSubPage'>\r\n            <DragAndDrop \r\n                columns={[                    \r\n                    {name:'Drag and drop items to Assets and Liabilities',id:1,\r\n                        exercise:true,\r\n                        starting:true},\r\n                    {\r\n                        name:'Assets',id:0,\r\n                        icon:'AttachMoneyIcon'\r\n                    },\r\n                    {\r\n                        name:'Liabilities',\r\n                        id:2,\r\n                        icon:'MoneyOffIcon'\r\n                    },                    \r\n                ]}\r\n                items={[\r\n                    {name:'Car',start:1,target:2},\r\n                    {name:'Stock',start:1,target:0},\r\n                    {name:'Bond',start:1,target:0},\r\n                    {name:'Boat',start:1,target:2},\r\n                    {name:'House',start:1,target:0},\r\n                    \r\n                ]}\r\n                getScore={scoreHandler}\r\n                startExercise={true}\r\n            />\r\n            <ArticleExerciseStats score={score} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ValueInvestingAndIntrinsicValue({article,completeArticle}){\r\n\r\n    const [articleSubNav, setArticleSubNav] = useState(new SubArticleNav(['Practise','Exercise']))\r\n\r\n    return(\r\n        <div id={article.articleId} className='articleContainer'>\r\n            <ArticleHeader \r\n                header={'2. Value investing and intrinsic value'} \r\n                articleSubNav={articleSubNav} \r\n                setArticleSubNav={setArticleSubNav}\r\n            />\r\n            <div className='articleSubPages' style={articleSubNav.subPageStyle(articleSubNav)}>\r\n                <ValueInvesting/>\r\n                <ValueInvestingExercise article={article} completeArticle={completeArticle}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ValueInvestingExercise({article, completeArticle}){\r\n\r\n    const [houses, setHouses] = useState([\r\n        {price:95,size:50},\r\n        {price:130,size:55},\r\n        {price:80,size:40},\r\n        {price:null,size:75, estimate:true},\r\n    ])\r\n\r\n    const modifyPriceHandler = (e) =>{\r\n        const {value} = e.target\r\n        const housesCopy=[...houses]\r\n        housesCopy[3].price=value\r\n        setHouses(housesCopy)\r\n    }\r\n\r\n    const submitScoreHandler = () => {\r\n        const score={\r\n            total:0,\r\n            wrong:0,\r\n            correct:0,\r\n            notAnswered:0,\r\n        }\r\n        score.total++\r\n        if(houses[3].price>145&&houses[3].price<170){\r\n            score.correct++\r\n        }else{\r\n            score.wrong++\r\n        }\r\n        completeArticle(article.id,score)\r\n    }\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <div className='articleExerciseHeader'>\r\n                <h2>Estimate the intrinsic value of house 4 based on price per square meter</h2>\r\n            </div>\r\n            <div className='articleMiddle'>\r\n                <div className='housePrices exerciseContainer'>    \r\n                    {houses.map((item,index) =>\r\n                        <div key={index} className='housePrice houseCard'>\r\n                            <MaterialIcon icon={'HomeIcon'} className='houseIcon'/>\r\n                            <h3>House {index+1}</h3>\r\n                            <ul className='list smallList'>   \r\n                                <li>                            \r\n                                    <label>Price</label>\r\n                                     <h3>{item.price}k</h3>\r\n                                </li>                                \r\n                                <li>\r\n                                    <label>Size</label>\r\n                                    <h3>{item.size}/m2</h3>\r\n                                </li>\r\n                                <li>\r\n                                    <label>Price/m2</label>\r\n                                    <h3>{(item.price/item.size).toFixed(2)}k</h3>\r\n                                </li>\r\n                                <li></li>\r\n                            </ul>                            \r\n                        </div>\r\n                    )}    \r\n                    <div className='estimateHousePrice'>\r\n                        <h3>Estimate</h3>\r\n                        <input min={50} max={200} type='range' onChange={(e) => modifyPriceHandler(e)}/>  \r\n                        <button onClick={submitScoreHandler} className='button'>Submit Estimate</button>\r\n                    </div>                    \r\n                </div>  \r\n            </div>\r\n            <ArticleExerciseStats score={{}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ValueInvesting(){\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const demoStartHandler = () =>{\r\n        setStartDemo(!startDemo)\r\n    }\r\n\r\n    const housePrices=[100,110,80,105]\r\n    let colors=['orange','red','green','red']\r\n\r\n    let median = housePrices.reduce((a,c) => a+c,0)/housePrices.length\r\n    const chartData={\r\n        labels: housePrices.map((item,index) => `House ${index+1}`),\r\n        datasets: [{\r\n          label: \"My First dataset\",\r\n          borderWidth: 1,\r\n          data: housePrices,\r\n        }],\r\n        lineAtIndex: 2\r\n      }\r\n\r\n      let chartOptions = {\r\n        responsive:true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true,\r\n            display:false,\r\n            gridLines: {\r\n                display:false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            stacked: true,\r\n            display:false,\r\n            gridLines: {\r\n                display:false\r\n            }\r\n          }]\r\n        },\r\n        legend:{\r\n            display:false\r\n        },\r\n        annotation: {\r\n            annotations: [\r\n                {\r\n                  drawTime: \"afterDatasetsDraw\",\r\n                  type: \"line\",\r\n                  mode: \"horizontal\",\r\n                  scaleID: \"y-axis-0\",\r\n                  value: 100,\r\n                  borderWidth:2,\r\n                  borderColor: \"black\",\r\n                  label: {\r\n                    content: \"Median\",\r\n                    enabled: true,\r\n                    position: \"right\",\r\n                  }\r\n                }\r\n              ]\r\n        },          \r\n        plugins: {\r\n            datalabels: {\r\n              align: 'end',\r\n              anchor: 'end',\r\n              size: 50,\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },                 \r\n              color: function(context) {\r\n                return colors[context.dataIndex]\r\n              },\r\n              formatter: function(value){\r\n                  if(value<median*0.95) return 'Undervalued'\r\n                  if(value>median*1.05) return 'Overvalued'\r\n                  return 'Fairlyvalued';\r\n              }\r\n            },\r\n      \r\n          },\r\n\r\n      };\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <TextList\r\n                content={[\r\n                    {header:'Value Investing',text:'Buying assets which value is higher than the price.'},\r\n                    {header:'Intrinsic Value',text:'The real value of item. Market value often differs from the real value of the item. Your job as an investor is the calculate the real value'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n                <div className='valueInvestingDemo'>\r\n                        <div className='houseChart'>\r\n                            {startDemo&&\r\n                                <Bar data={chartData} options={chartOptions}/>\r\n                            }\r\n                        </div>\r\n                        <h2>Neighborhood with 4 houses</h2>\r\n                        <div className='housePrices'>    \r\n                            {housePrices.map((item,index) =>\r\n                                <div key={index} className='housePrice'>\r\n                                    <MaterialIcon icon={'HomeIcon'} className='houseIcon'/>\r\n                                    <h3>{item}k</h3>\r\n                                </div>\r\n                            )}                        \r\n                        </div>                             \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function InvestingCategories({article,completeArticle}){\r\n\r\n    const [articleSubNav, setArticleSubNav] = useState(new SubArticleNav(['Practise','Exercise']))\r\n\r\n    return(\r\n        <div id={article.articleId} className='articleContainer'>\r\n            <ArticleHeader \r\n                header={'3. Investing categories'} \r\n                articleSubNav={articleSubNav} \r\n                setArticleSubNav={setArticleSubNav}\r\n            />\r\n            <div className='articleSubPages' style={articleSubNav.subPageStyle(articleSubNav)}>\r\n                <InvestingCategoriesPractice/>\r\n                <InvestingCategoriesExercise article={article}  completeArticle={completeArticle}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InvestingCategoriesExercise({article,completeArticle}){\r\n\r\n    const [score,setScore] = useState({})\r\n    \r\n    const scoreHandler=(newScore)=>{\r\n        setScore(newScore)\r\n        if((newScore.correct+newScore.wrong)===newScore.total){\r\n            completeArticle(article.id,score)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='dragAndDropExercise'>\r\n            <DragAndDrop \r\n                columns={[                    \r\n                    {name:'Drag and drop assets to correct risk category',id:0,\r\n                        exercise:true,\r\n                        starting:true},\r\n                    {\r\n                        name:'Low',\r\n                        id:1,\r\n                        icon:'AttachMoneyIcon'\r\n                    },\r\n                    {\r\n                        name:'Medium',\r\n                        id:2,\r\n                        icon:'MoneyOffIcon'\r\n                    },                    \r\n                    {\r\n                        name:'High',\r\n                        id:3,\r\n                        icon:'MoneyOffIcon'\r\n                    },                    \r\n                ]}\r\n                items={[\r\n                    {name:'Stock',start:0,target:2},\r\n                    {name:'Goverment Bonds',start:0,target:1},\r\n                    {name:'Derivates',start:0,target:3},\r\n                    {name:'Cryptocurrencies',start:0,target:3},\r\n                    {name:'Mutual funds',start:0,target:1},\r\n                    {name:'Reits',start:0,target:2},\r\n                    {name:'Private Equity',start:0,target:3},\r\n                    {name:'Corporate Bonds',start:0,target:2},\r\n                    {name:'Commodities',start:0,target:3},\r\n                    {name:'ETFs',start:0,target:2},\r\n                    {name:'Cash',start:0,target:1},\r\n                ]}\r\n                getScore={scoreHandler}\r\n                startExercise={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InvestingCategoriesPractice(){\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const investingCategories=[\r\n        {name:'Cash',riskCategory:1,risk:1},\r\n        {name:'Goverment Bonds',riskCategory:1,risk:1.5},\r\n        {name:'Mutual fund',riskCategory:1,risk:3},\r\n        {name:'Corporate Bonds',riskCategory:2,risk:3.5},        \r\n        {name:'ETFs',riskCategory:2,risk:4},\r\n        {name:'REITs',riskCategory:2,risk:4.5},\r\n        {name:'Stock',riskCategory:2,risk:5},\r\n        {name:'Private Equity',riskCategory:3,risk:7},\r\n        {name:'Commodities',riskCategory:3,risk:7.5},\r\n        {name:'Derivates',riskCategory:3,risk:9},\r\n        {name:'CryptoCurrencies',riskCategory:3,risk:10},\r\n    ]\r\n\r\n    const demoStartHandler = () =>{\r\n        setStartDemo(!startDemo)\r\n    }\r\n\r\n    const data = {\r\n        labels: investingCategories.map(item => item.name),\r\n        datasets: [\r\n          {\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            backgroundColor:investingCategories.map(item =>{\r\n                if(item.riskCategory===1) return 'green'\r\n                if(item.riskCategory===2) return 'orange'\r\n                if(item.riskCategory===3) return 'red'\r\n                return''\r\n            }),\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: investingCategories.map((item,index) => item.risk),\r\n          },\r\n        ]\r\n      };\r\n\r\n      const options = {\r\n        responsive:true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true\r\n                }\r\n            }],\r\n            xAxes:[{\r\n                ticks:{\r\n                    maxRotation: 0,\r\n                    minRotation: 0\r\n                }\r\n            }]\r\n        },\r\n        legend:{\r\n            display:false,\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n        },\r\n        plugins: {\r\n            datalabels: {\r\n                display:false\r\n            }\r\n          }\r\n      };\r\n\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <TextList\r\n                content={[\r\n                    {header:'Investment category risk ladder',text:'In investing risk and reward goes hand and hand.'},\r\n                    {header:'Level 1 - Cash and goverment bonds',text:'Relatively safe investment with minimun risk of losing capital.'},\r\n                    {header:'Level 2 - Corporate bonds and stocks ',text:'Medium risk and reward.'},\r\n                    {header:'Level 3 - Other investments and derivates ',text:'High risk with change of losing capital'},\r\n                    {buttons:[{text:'Risk Ladder',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            <div className='articleExample'>\r\n                {startDemo &&\r\n                    <Bar data={data} options={options} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyCourseScreen.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":138,"column":24,"nodeType":"141","messageId":"142","endLine":158,"endColumn":14},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'asset', 'liability', 'gas', 'insurance', 'asset', 'liability', 'gas', 'insurance', 'liability', 'gas', 'insurance', 'asset', 'liability', 'liability', 'gas', 'insurance'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]