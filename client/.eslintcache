[{"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\index.js":"1","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\App.js":"2","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Footer.js":"3","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyScreen.js":"4","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\LandingScreen.js":"5","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyInvestingScreen.js":"6","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Header.js":"7","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyStockMarketScreen.js":"8","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\SectionHeader.js":"9","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\MaterialIcon.js":"10","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\DragAndDrop.js":"11","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\utils.js":"12","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\subArticleNav.js":"13","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleHeader.js":"14","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\TextList.js":"15","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleNavigation.js":"16","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleExerciseStats.js":"17","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\articleNav.js":"18","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleRecap.js":"19","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleTableOfContent.js":"20","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleQuestionnary.js":"21","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\TrainingStatus.js":"22","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleSubNav.js":"23","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\store.js":"24","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\reducers\\userReducers.js":"25","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\constants\\userConstants.js":"26","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\actions\\userActions.js":"27","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\ProfileScreen.js":"28"},{"size":295,"mtime":1607456568107,"results":"29","hashOfConfig":"30"},{"size":1129,"mtime":1607457363115,"results":"31","hashOfConfig":"30"},{"size":245,"mtime":1607327655435,"results":"32","hashOfConfig":"30"},{"size":3078,"mtime":1607327655456,"results":"33","hashOfConfig":"30"},{"size":391,"mtime":1607456568109,"results":"34","hashOfConfig":"30"},{"size":24205,"mtime":1607327655456,"results":"35","hashOfConfig":"30"},{"size":1732,"mtime":1607525705878,"results":"36","hashOfConfig":"30"},{"size":11138,"mtime":1607497288441,"results":"37","hashOfConfig":"30"},{"size":661,"mtime":1607327655440,"results":"38","hashOfConfig":"30"},{"size":1868,"mtime":1607327655438,"results":"39","hashOfConfig":"30"},{"size":7976,"mtime":1607327655434,"results":"40","hashOfConfig":"30"},{"size":450,"mtime":1607327655475,"results":"41","hashOfConfig":"30"},{"size":473,"mtime":1607327655469,"results":"42","hashOfConfig":"30"},{"size":413,"mtime":1607327655429,"results":"43","hashOfConfig":"30"},{"size":1134,"mtime":1607327655433,"results":"44","hashOfConfig":"30"},{"size":2478,"mtime":1607327655431,"results":"45","hashOfConfig":"30"},{"size":360,"mtime":1607327655428,"results":"46","hashOfConfig":"30"},{"size":1833,"mtime":1607498040327,"results":"47","hashOfConfig":"30"},{"size":1562,"mtime":1607498278757,"results":"48","hashOfConfig":"30"},{"size":1170,"mtime":1607498263112,"results":"49","hashOfConfig":"30"},{"size":1054,"mtime":1607327655431,"results":"50","hashOfConfig":"30"},{"size":249,"mtime":1607327655445,"results":"51","hashOfConfig":"30"},{"size":582,"mtime":1607327655433,"results":"52","hashOfConfig":"30"},{"size":472,"mtime":1607525735928,"results":"53","hashOfConfig":"30"},{"size":561,"mtime":1607456568107,"results":"54","hashOfConfig":"30"},{"size":198,"mtime":1607456568105,"results":"55","hashOfConfig":"30"},{"size":768,"mtime":1607525745172,"results":"56","hashOfConfig":"30"},{"size":594,"mtime":1607494402937,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1n5r2uf",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\index.js",[],["118","119"],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\App.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Footer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\LandingScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyInvestingScreen.js",["120","121","122"],"import React,{useState,useEffect} from 'react'\r\nimport SectionHeader from '../components/SectionHeader'\r\nimport DragAndDrop from '../components/DragAndDrop'\r\nimport ArticleHeader from '../components/Article/ArticleHeader'\r\nimport ArticleNavigation from '../components/Article/ArticleNavigation'\r\nimport ArticleExerciseStats from '../components/Article/ArticleExerciseStats'\r\nimport { SubArticleNav } from '../utils/subArticleNav'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport { ArticleNav } from '../utils/articleNav';\r\nimport TextList from '../components/Article/TextList'\r\nimport MaterialIcon from '../components/MaterialIcon'\r\nimport { datalabels } from 'chartjs-plugin-datalabels'\r\nimport annotation from \"chartjs-plugin-annotation\";\r\nimport ArticleTableOfContent from '../components/Article/ArticleTableOfContent'\r\nimport ArticleRecap from '../components/Article/ArticleRecap'\r\n\r\nconst articleContent=[\r\n    {\r\n        name:'Assets And Liabilities',\r\n        desc:'What is the difference between asset and liability',\r\n        articleTerms:['Asset','Liability']\r\n    },\r\n    {\r\n        name:'Value Investing And Intrinsic Value',\r\n        desc:'What is the difference market price and real value of asset',\r\n        articleTerms:['Value investing','Intrinsic value']\r\n    },\r\n    {\r\n        name:'Investing categories',\r\n        desc:'Different investing categories',\r\n        articleTerms:['Investment Risk Ladder','Stock','Bond']\r\n    },\r\n]\r\n\r\nexport default function AcademyInvestingScreen() {\r\n\r\n    const [navigation, setNavigation] = useState(new ArticleNav(articleContent,true))\r\n\r\n    const handleNavigate=(direction,status)=>{\r\n        navigation.navigate(direction,status,navigation,setNavigation)\r\n    }\r\n\r\n    const completeArticleHandler=(id,score)=>{\r\n        navigation.complete(id,score,navigation,setNavigation)\r\n    }\r\n\r\n    return (\r\n        <section className='academySection' >\r\n            <SectionHeader \r\n                header={'Investing'} \r\n                // subHeader={'Investing'} \r\n                // back={'/academy'}\r\n            /> \r\n            <div className='academyArticles' id={'academyArticles'} >\r\n                <ArticleTableOfContent navigation={navigation} moveTo={handleNavigate}/>\r\n                <AssetsAndLiabilities article={navigation.articles[0]} completeArticle={completeArticleHandler} /> \r\n                <ValueInvestingAndIntrinsicValue article={navigation.articles[1]} completeArticle={completeArticleHandler} />\r\n                <InvestingCategories article={navigation.articles[2]}  completeArticle={completeArticleHandler} />  \r\n                <ArticleRecap navigation={navigation}/>\r\n            </div>\r\n            <ArticleNavigation moveTo={handleNavigate} navigation={navigation}/>        \r\n        </section>\r\n    )\r\n}\r\n\r\nfunction InvestingCategories({article,completeArticle}){\r\n\r\n    const [articleSubNav, setArticleSubNav] = useState(new SubArticleNav(['Practise','Exercise']))\r\n\r\n    return(\r\n        <div id={article.articleId} className='articleContainer'>\r\n            <ArticleHeader \r\n                header={'3. Investing categories'} \r\n                articleSubNav={articleSubNav} \r\n                setArticleSubNav={setArticleSubNav}\r\n            />\r\n            <div className='articleSubPages' style={articleSubNav.subPageStyle(articleSubNav)}>\r\n                <InvestingCategoriesPractice/>\r\n                <InvestingCategoriesExercise article={article}  completeArticle={completeArticle}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InvestingCategoriesExercise({article,completeArticle}){\r\n\r\n    const [score,setScore] = useState({})\r\n    \r\n    const scoreHandler=(newScore)=>{\r\n        setScore(newScore)\r\n        if((newScore.correct+newScore.wrong)===newScore.total){\r\n            completeArticle(article.id,score)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='dragAndDropExercise'>\r\n            <DragAndDrop \r\n                columns={[                    \r\n                    {name:'Drag and drop assets to correct risk category',id:0,\r\n                        exercise:true,\r\n                        starting:true},\r\n                    {\r\n                        name:'Low',\r\n                        id:1,\r\n                        icon:'AttachMoneyIcon'\r\n                    },\r\n                    {\r\n                        name:'Medium',\r\n                        id:2,\r\n                        icon:'MoneyOffIcon'\r\n                    },                    \r\n                    {\r\n                        name:'High',\r\n                        id:3,\r\n                        icon:'MoneyOffIcon'\r\n                    },                    \r\n                ]}\r\n                items={[\r\n                    {name:'Stock',start:0,target:2},\r\n                    {name:'Goverment Bonds',start:0,target:1},\r\n                    {name:'Derivates',start:0,target:3},\r\n                    {name:'Cryptocurrencies',start:0,target:3},\r\n                    {name:'Mutual funds',start:0,target:1},\r\n                    {name:'Reits',start:0,target:2},\r\n                    {name:'Private Equity',start:0,target:3},\r\n                    {name:'Corporate Bonds',start:0,target:2},\r\n                    {name:'Commodities',start:0,target:3},\r\n                    {name:'ETFs',start:0,target:2},\r\n                    {name:'Cash',start:0,target:1},\r\n                ]}\r\n                getScore={scoreHandler}\r\n                startExercise={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InvestingCategoriesPractice(){\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const investingCategories=[\r\n        {name:'Cash',riskCategory:1,risk:1},\r\n        {name:'Goverment Bonds',riskCategory:1,risk:1.5},\r\n        {name:'Mutual fund',riskCategory:1,risk:3},\r\n        {name:'Corporate Bonds',riskCategory:2,risk:3.5},        \r\n        {name:'ETFs',riskCategory:2,risk:4},\r\n        {name:'REITs',riskCategory:2,risk:4.5},\r\n        {name:'Stock',riskCategory:2,risk:5},\r\n        {name:'Private Equity',riskCategory:3,risk:7},\r\n        {name:'Commodities',riskCategory:3,risk:7.5},\r\n        {name:'Derivates',riskCategory:3,risk:9},\r\n        {name:'CryptoCurrencies',riskCategory:3,risk:10},\r\n    ]\r\n\r\n    const demoStartHandler = () =>{\r\n        setStartDemo(!startDemo)\r\n    }\r\n\r\n    const data = {\r\n        labels: investingCategories.map(item => item.name),\r\n        datasets: [\r\n          {\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            backgroundColor:investingCategories.map(item =>{\r\n                if(item.riskCategory===1) return 'green'\r\n                if(item.riskCategory===2) return 'orange'\r\n                if(item.riskCategory===3) return 'red'\r\n                return''\r\n            }),\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: investingCategories.map((item,index) => item.risk),\r\n          },\r\n        ]\r\n      };\r\n\r\n      const options = {\r\n        responsive:true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true\r\n                }\r\n            }],\r\n            xAxes:[{\r\n                ticks:{\r\n                    maxRotation: 0,\r\n                    minRotation: 0\r\n                }\r\n            }]\r\n        },\r\n        legend:{\r\n            display:false,\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n        },\r\n        plugins: {\r\n            datalabels: {\r\n                display:false\r\n            }\r\n          }\r\n      };\r\n\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <TextList\r\n                content={[\r\n                    {header:'Investment category risk ladder',text:'In investing risk and reward goes hand and hand.'},\r\n                    {header:'Level 1 - Cash and goverment bonds',text:'Relatively safe investment with minimun risk of losing capital.'},\r\n                    {header:'Level 2 - Corporate bonds and stocks ',text:'Medium risk and reward.'},\r\n                    {header:'Level 3 - Other investments and derivates ',text:'High risk with change of losing capital'},\r\n                    {buttons:[{text:'Risk Ladder',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            <div className='articleExample'>\r\n                {startDemo &&\r\n                    <Bar data={data} options={options} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ValueInvestingAndIntrinsicValue({article,completeArticle}){\r\n\r\n    const [articleSubNav, setArticleSubNav] = useState(new SubArticleNav(['Practise','Exercise']))\r\n\r\n    return(\r\n        <div id={article.articleId} className='articleContainer'>\r\n            <ArticleHeader \r\n                header={'2. Value investing and intrinsic value'} \r\n                articleSubNav={articleSubNav} \r\n                setArticleSubNav={setArticleSubNav}\r\n            />\r\n            <div className='articleSubPages' style={articleSubNav.subPageStyle(articleSubNav)}>\r\n                <ValueInvesting/>\r\n                <ValueInvestingExercise article={article} completeArticle={completeArticle}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ValueInvestingExercise({article, completeArticle}){\r\n\r\n    const [houses, setHouses] = useState([\r\n        {price:95,size:50},\r\n        {price:130,size:55},\r\n        {price:80,size:40},\r\n        {price:null,size:75, estimate:true},\r\n    ])\r\n\r\n    const modifyPriceHandler = (e) =>{\r\n        const {value} = e.target\r\n        const housesCopy=[...houses]\r\n        housesCopy[3].price=value\r\n        setHouses(housesCopy)\r\n    }\r\n\r\n    const submitScoreHandler = () => {\r\n        const score={\r\n            total:0,\r\n            wrong:0,\r\n            correct:0,\r\n            notAnswered:0,\r\n        }\r\n        score.total++\r\n        if(houses[3].price>145&&houses[3].price<170){\r\n            score.correct++\r\n        }else{\r\n            score.wrong++\r\n        }\r\n        completeArticle(article.id,score)\r\n    }\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <div className='articleExerciseHeader'>\r\n                <h2>Estimate the intrinsic value of house 4 based on price per square meter</h2>\r\n            </div>\r\n            <div className='articleMiddle'>\r\n                <div className='housePrices exerciseContainer'>    \r\n                    {houses.map((item,index) =>\r\n                        <div className='housePrice houseCard'>\r\n                            <MaterialIcon icon={'HomeIcon'} className='houseIcon'/>\r\n                            <h3>House {index+1}</h3>\r\n                            <ul className='list smallList'>   \r\n                                <li>                            \r\n                                    <label>Price</label>\r\n                                     <h3>{item.price}k</h3>\r\n                                </li>                                \r\n                                <li>\r\n                                    <label>Size</label>\r\n                                    <h3>{item.size}/m2</h3>\r\n                                </li>\r\n                                <li>\r\n                                    <label>Price/m2</label>\r\n                                    <h3>{(item.price/item.size).toFixed(2)}k</h3>\r\n                                </li>\r\n                                <li></li>\r\n                            </ul>                            \r\n                        </div>\r\n                    )}    \r\n                    <div className='estimateHousePrice'>\r\n                        <h3>Estimate</h3>\r\n                        <input min={50} max={200} type='range' onChange={(e) => modifyPriceHandler(e)}/>  \r\n                        <button onClick={submitScoreHandler} className='button'>Submit Estimate</button>\r\n                    </div>                    \r\n                </div>  \r\n            </div>\r\n            <ArticleExerciseStats score={{}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ValueInvesting(){\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const demoStartHandler = () =>{\r\n        setStartDemo(!startDemo)\r\n    }\r\n\r\n    const housePrices=[100,110,80,105]\r\n    let colors=['orange','red','green','red']\r\n\r\n    let median = housePrices.reduce((a,c) => a+c,0)/housePrices.length\r\n    const chartData={\r\n        labels: housePrices.map((item,index) => `House ${index+1}`),\r\n        datasets: [{\r\n          label: \"My First dataset\",\r\n          borderWidth: 1,\r\n          data: housePrices,\r\n        }],\r\n        lineAtIndex: 2\r\n      }\r\n\r\n      let chartOptions = {\r\n        responsive:true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true,\r\n            display:false,\r\n            gridLines: {\r\n                display:false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            stacked: true,\r\n            display:false,\r\n            gridLines: {\r\n                display:false\r\n            }\r\n          }]\r\n        },\r\n        legend:{\r\n            display:false\r\n        },\r\n        annotation: {\r\n            annotations: [\r\n                {\r\n                  drawTime: \"afterDatasetsDraw\",\r\n                  type: \"line\",\r\n                  mode: \"horizontal\",\r\n                  scaleID: \"y-axis-0\",\r\n                  value: 100,\r\n                  borderWidth:2,\r\n                  borderColor: \"black\",\r\n                  label: {\r\n                    content: \"Median\",\r\n                    enabled: true,\r\n                    position: \"right\",\r\n                  }\r\n                }\r\n              ]\r\n        },          \r\n        plugins: {\r\n            datalabels: {\r\n              align: 'end',\r\n              anchor: 'end',\r\n              size: 50,\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },                 \r\n              color: function(context) {\r\n                return colors[context.dataIndex]\r\n              },\r\n              formatter: function(value){\r\n                  if(value<median*0.95) return 'Undervalued'\r\n                  if(value>median*1.05) return 'Overvalued'\r\n                  return 'Fairlyvalued';\r\n              }\r\n            },\r\n      \r\n          },\r\n\r\n      };\r\n\r\n    return(\r\n        <div className='articleSubPage'>\r\n            <TextList\r\n                content={[\r\n                    {header:'Value Investing',text:'Buying assets which value is higher than the price.'},\r\n                    {header:'Intrinsic Value',text:'The real value of item. Market value often differs from the real value of the item. Your job as an investor is the calculate the real value'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n                <div className='valueInvestingDemo'>\r\n                        <div className='houseChart'>\r\n                            {startDemo&&\r\n                                <Bar data={chartData} options={chartOptions}/>\r\n                            }\r\n                        </div>\r\n                        <h2>Neighborhood with 4 houses</h2>\r\n                        <div className='housePrices'>    \r\n                            {housePrices.map(item =>\r\n                                <div className='housePrice'>\r\n                                    <MaterialIcon icon={'HomeIcon'} className='houseIcon'/>\r\n                                    <h3>{item}k</h3>\r\n                                </div>\r\n                            )}                        \r\n                        </div>                             \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AssetsAndLiabilities({article,completeArticle}){    \r\n\r\n    const [articleSubNav, setArticleSubNav] = useState(new SubArticleNav(['Content','Exercise']))\r\n\r\n    const [score,setScore] = useState({})\r\n    \r\n    const scoreHandler=(newScore)=>{\r\n        setScore(newScore)\r\n        if(newScore.correct===newScore.total){\r\n            completeArticle(article.id,score)\r\n        }\r\n    }\r\n    return(\r\n        <div id={article.articleId} className='articleContainer'>\r\n            <ArticleHeader \r\n                header={'1. Assets and Liabilities'} \r\n                articleSubNav={articleSubNav} \r\n                setArticleSubNav={setArticleSubNav}\r\n            />\r\n            <div className='articleSubPages' style={articleSubNav.subPageStyle(articleSubNav)}>\r\n                <AssetsAndLiabilitiesPractice />\r\n                <AssetsAndLiabilitiesExercise score={score} scoreHandler={scoreHandler} />\r\n            </div>\r\n        </div>  \r\n    ) \r\n}\r\n\r\nfunction AssetsAndLiabilitiesPractice(){\r\n\r\n    const [startDemo,setStartDemo] = useState(false)\r\n\r\n    const [chartData,setChartData] = useState({\r\n        assetData:[],\r\n        liabilityData:[],\r\n        labels:[],\r\n        interest:0,\r\n        totalLiability:0,\r\n        depreciation:0,\r\n        gas:0,\r\n        insurance:0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        \r\n        let newLabels = []\r\n        let data=[]\r\n\r\n        for(var i=0;i<120;i+=3){\r\n            let date = new Date()\r\n            date.setMonth(date.getMonth() + i);\r\n            let year=date.getFullYear()\r\n            let month = date.getMonth()\r\n            newLabels.push(month+'/'+year)\r\n            data.push(1000+(i*100))\r\n        }\r\n        setChartData({...chartData,labels:newLabels})\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    const data = {\r\n        labels: chartData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Asset (6% annual interest)',\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.assetData,\r\n          },\r\n          {\r\n            label: 'Liability (car)',\r\n            fill: false,\r\n            borderColor: 'rgba(222, 115, 115,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.liabilityData,\r\n          }\r\n        ]\r\n      };\r\n\r\n      const lineOptions = {\r\n        responsive:true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    max:20000,\r\n                    min:-20000,\r\n                    autoSkip: true, \r\n                    maxTicksLimit: 5\r\n                }\r\n            }],\r\n            xAxes:[{\r\n                ticks:{\r\n                    autoSkip: true, \r\n                    maxTicksLimit: 5,\r\n                    maxRotation: 0,\r\n                    minRotation: 0\r\n                }\r\n            }]\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n        },\r\n        plugins: {\r\n            datalabels: {\r\n                display:false\r\n            }\r\n          }\r\n      };\r\n\r\n    const demoStartHandler=()=>{\r\n\r\n        setStartDemo(true)\r\n\r\n        let asset = 10000\r\n        let liability = 10000\r\n        let gas = 0\r\n        let insurance = 0\r\n\r\n        for(let i=0; i<=120; i+=3) {\r\n            setTimeout(() => {\r\n                let assetDataCopy=[...chartData.assetData]\r\n                let liabilityDataCopy=[...chartData.liabilityData]\r\n                assetDataCopy.push(asset)\r\n                liabilityDataCopy.push(liability+gas+insurance)\r\n\r\n                setChartData({\r\n                    ...chartData,\r\n                    assetData:assetDataCopy,\r\n                    liabilityData:liabilityDataCopy,\r\n                    interest:asset-10000,\r\n                    totalLiability:liability+gas+insurance,\r\n                    depreciation:liability-10000,\r\n                    gas,\r\n                    insurance\r\n                })\r\n                asset*=1.015\r\n                liability-=liability*0.025\r\n                gas-=375\r\n                insurance-=225\r\n            }, 30 * i);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='aalDemo'>\r\n            <TextList\r\n                content={[\r\n                    {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    {header:'Liabilities',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            <div className='chartContainer'>\r\n                 <Line data={data} options={lineOptions} />\r\n            </div>\r\n           {startDemo &&\r\n            <div className='aalDemoResult'>\r\n                <h2>Asset vs liability in 10 years</h2>\r\n                <ul >\r\n                    <li>\r\n                        <h3>Asset</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Initial Investment:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Interest (6% year): </p> \r\n                                <p>{chartData.interest.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.interest+10000).toFixed(2)}</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Liability</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Car price:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Depreciation (10% year): </p> \r\n                                <p>{chartData.depreciation.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Gas (1500$ year : </p> \r\n                                <p>{(chartData.gas).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Insurance (900$ year): </p> \r\n                                <p>{(chartData.insurance).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.totalLiability).toFixed(2)}</h3>\r\n                            </li>                        \r\n                        </ul>\r\n                    </li>\r\n                </ul>                \r\n            </div>        \r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AssetsAndLiabilitiesExercise({score,scoreHandler}){\r\n    return(\r\n        <div className='dragAndDropExercise articleSubPage'>\r\n            <DragAndDrop \r\n                columns={[                    \r\n                    {name:'Drag and drop items to Assets and Liabilities',id:1,\r\n                        exercise:true,\r\n                        starting:true},\r\n                    {\r\n                        name:'Assets',id:0,\r\n                        icon:'AttachMoneyIcon'\r\n                    },\r\n                    {\r\n                        name:'Liabilities',\r\n                        id:2,\r\n                        icon:'MoneyOffIcon'\r\n                    },                    \r\n                ]}\r\n                items={[\r\n                    {name:'Car',start:1,target:2},\r\n                    {name:'Stock',start:1,target:0},\r\n                    {name:'Bond',start:1,target:0},\r\n                    {name:'Boat',start:1,target:2},\r\n                    {name:'House',start:1,target:0},\r\n                    \r\n                ]}\r\n                getScore={scoreHandler}\r\n                startExercise={true}\r\n            />\r\n            <ArticleExerciseStats score={score} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Header.js",["123"],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\AcademyStockMarketScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\SectionHeader.js",["124"],"import React from 'react'\r\nimport TrainingStatus from './TrainingStatus'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function SectionHeader({header,subHeader,back}) {\r\n    return (\r\n        <header className='sectionHeader'>\r\n            <h1>{header}</h1>\r\n            {back&& <BackButton linkTo={back} />} \r\n            <h2>{subHeader}</h2>\r\n            {/* <TrainingStatus/> */}\r\n        </header>\r\n    )\r\n}\r\n\r\nfunction BackButton({linkTo}){\r\n    return(\r\n        <Link to={linkTo} className='backButton'>\r\n            Back\r\n            {/* <MaterialIcon icon={'ArrowBackIosIcon'} color={'var(--primary-color)'}/> */}\r\n        </Link>\r\n    )\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\MaterialIcon.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\DragAndDrop.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\utils.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\subArticleNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\TextList.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleNavigation.js",["125"],"import React from 'react'\r\nimport MaterialIcon from '../MaterialIcon'\r\n\r\nexport default function ArticleNavigation({moveTo,navigation,}){\r\n\r\n    const getBorderStyle=(item,index)=>{\r\n        let color=item.id===navigation.current?'var(--secondary-color)':'rgba(255, 255, 255,0.0)'\r\n        return '0.2rem solid '+color\r\n    }\r\n\r\n    const getNextButtonStatus=(navigation)=>{\r\n        let currentArticle = navigation.articles.find(item => item.id===navigation.current)\r\n        if(!currentArticle) return ''\r\n        if(navigation.current===navigation.articles.length-1) return 'unavailable'\r\n        return currentArticle.completed?'available':'unavailable'\r\n    }\r\n\r\n    const getButtonStyle=(id)=>{\r\n        let color=navigation.current===id?'var(--secondary-color)':'rgba(255, 255, 255,0.0)'\r\n        return '0.2rem solid '+color\r\n    }\r\n\r\n    // let prevButtonStatus = navigation.current===-1?'unavailable':''\r\n    // let nextButtonStatus = getNextButtonStatus(navigation)\r\n    let prevButtonStatus = ''\r\n    let nextButtonStatus = ''\r\n\r\n    return(\r\n        <div className='articleNavigationContainer'>\r\n            <div className='articleNavigation'>\r\n                \r\n                <button onClick={()=> moveTo('start',prevButtonStatus)}\r\n                    className='articleNavButton'\r\n                    style={{border: getButtonStyle('start')}}\r\n                >\r\n                    <MaterialIcon \r\n                        className={`navigationIcon ${prevButtonStatus}`}\r\n                        icon={'TocIcon'} \r\n                    />\r\n                </button>\r\n\r\n                {navigation.articles.map((item,index) =>\r\n                    <button\r\n                        onClick={()=> moveTo(item.id,'')}\r\n                        key={item.id}\r\n                        style={{border: getBorderStyle(item,index)}}\r\n                        className='navigationCheckpoint'\r\n                    >\r\n                    {index+1}\r\n                </button> \r\n                )}\r\n\r\n                <button onClick={()=> moveTo('recap',nextButtonStatus)}\r\n                     className='articleNavButton'\r\n                     style={{border: getButtonStyle('recap')}}\r\n                >\r\n                    <MaterialIcon \r\n                        icon={'EmojiFlagsIcon'} \r\n                        className={`navigationIcon ${nextButtonStatus}`}\r\n                    />\r\n                </button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleExerciseStats.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\utils\\articleNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleRecap.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleTableOfContent.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleQuestionnary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\TrainingStatus.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\components\\Article\\ArticleSubNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\store.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\MidastoPedia\\client\\src\\screens\\ProfileScreen.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":12,"column":10,"nodeType":"132","messageId":"133","endLine":12,"endColumn":20},{"ruleId":"130","severity":1,"message":"134","line":13,"column":8,"nodeType":"132","messageId":"133","endLine":13,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":557,"column":24,"nodeType":"137","messageId":"138","endLine":577,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":28,"column":7,"nodeType":"141","endLine":28,"endColumn":9,"suggestions":"142"},{"ruleId":"130","severity":1,"message":"143","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"144","line":11,"column":11,"nodeType":"132","messageId":"133","endLine":11,"endColumn":30},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'datalabels' is defined but never used.","Identifier","unusedVar","'annotation' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'asset', 'liability', 'gas', 'insurance', 'asset', 'liability', 'gas', 'insurance', 'liability', 'gas', 'insurance', 'asset', 'liability', 'liability', 'gas', 'insurance'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'TrainingStatus' is defined but never used.","'getNextButtonStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [dispatch]",{"range":"150","text":"151"},[873,875],"[dispatch]"]