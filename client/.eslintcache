[{"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\index.js":"1","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\store.js":"2","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\App.js":"3","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Header.js":"4","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\reducers\\userReducers.js":"5","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Footer.js":"6","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\LandingScreen.js":"7","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyCourseScreen.js":"8","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyScreen.js":"10","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\ScreenHeader.js":"11","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\MaterialIcon.js":"12","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\userActions.js":"13","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\courseActions.js":"14","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseTableOfContent.js":"15","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseRecap.js":"16","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseHeader.js":"17","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseNav.js":"18","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\userConstants.js":"19","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courses.js":"20","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\utils.js":"21","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\course.js":"22","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\courseConstants.js":"23","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionHeader.js":"24","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\stockMarketCourse.js":"25","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\investingCourse.js":"26","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionNav.js":"27","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section1.js":"28","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section1.js":"29","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section2.js":"30","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionContainer.js":"31","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\DragAndDrop.js":"32","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleExerciseStats.js":"33","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleQuestionnary.js":"34","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\TextList.js":"35","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\sectionNav.js":"36","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\TrainingStatus.js":"37","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordion.js":"38","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\chartOptions.js":"39","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\InputGroup.js":"40","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\colors.js":"41","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ResultCard.js":"42","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseCompleted.js":"43","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseScore.js":"44","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExcersiseQuiz.js":"45","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordionDetails.js":"46","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleTerm.js":"47","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Sliders.js":"48","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\ShowMore.js":"49","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section2.js":"50","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ShareExample.js":"51","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section3.js":"52","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Buttons.js":"53","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Table.js":"54","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section5.js":"55","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section3.js":"56","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\VerticalStepper.js":"57","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\BusinessExample.js":"58"},{"size":295,"mtime":1608295048935,"results":"59","hashOfConfig":"60"},{"size":472,"mtime":1607526662418,"results":"61","hashOfConfig":"60"},{"size":1945,"mtime":1607930894748,"results":"62","hashOfConfig":"60"},{"size":2210,"mtime":1608100702429,"results":"63","hashOfConfig":"60"},{"size":561,"mtime":1607526662416,"results":"64","hashOfConfig":"60"},{"size":183,"mtime":1607771802310,"results":"65","hashOfConfig":"60"},{"size":391,"mtime":1607526662417,"results":"66","hashOfConfig":"60"},{"size":3057,"mtime":1608214953486,"results":"67","hashOfConfig":"60"},{"size":591,"mtime":1607705601644,"results":"68","hashOfConfig":"60"},{"size":1617,"mtime":1607705541413,"results":"69","hashOfConfig":"60"},{"size":785,"mtime":1607705839714,"results":"70","hashOfConfig":"60"},{"size":3068,"mtime":1608295881166,"results":"71","hashOfConfig":"60"},{"size":809,"mtime":1608100714550,"results":"72","hashOfConfig":"60"},{"size":545,"mtime":1608099856081,"results":"73","hashOfConfig":"60"},{"size":1318,"mtime":1608212594083,"results":"74","hashOfConfig":"60"},{"size":2847,"mtime":1608212582925,"results":"75","hashOfConfig":"60"},{"size":192,"mtime":1608062414012,"results":"76","hashOfConfig":"60"},{"size":4206,"mtime":1608236546181,"results":"77","hashOfConfig":"60"},{"size":198,"mtime":1607526662411,"results":"78","hashOfConfig":"60"},{"size":3943,"mtime":1608279611067,"results":"79","hashOfConfig":"60"},{"size":1010,"mtime":1608014768424,"results":"80","hashOfConfig":"60"},{"size":2953,"mtime":1608211010308,"results":"81","hashOfConfig":"60"},{"size":196,"mtime":1607703316724,"results":"82","hashOfConfig":"60"},{"size":1230,"mtime":1607930716501,"results":"83","hashOfConfig":"60"},{"size":228,"mtime":1608278758670,"results":"84","hashOfConfig":"60"},{"size":192,"mtime":1608278881895,"results":"85","hashOfConfig":"60"},{"size":1195,"mtime":1608204931238,"results":"86","hashOfConfig":"60"},{"size":6046,"mtime":1608237545972,"results":"87","hashOfConfig":"60"},{"size":16399,"mtime":1608238120968,"results":"88","hashOfConfig":"60"},{"size":9085,"mtime":1608279510925,"results":"89","hashOfConfig":"60"},{"size":1832,"mtime":1608211035283,"results":"90","hashOfConfig":"60"},{"size":7865,"mtime":1607703316678,"results":"91","hashOfConfig":"60"},{"size":349,"mtime":1607703316655,"results":"92","hashOfConfig":"60"},{"size":1054,"mtime":1607327655431,"results":"93","hashOfConfig":"60"},{"size":1175,"mtime":1608235223488,"results":"94","hashOfConfig":"60"},{"size":395,"mtime":1607866434286,"results":"95","hashOfConfig":"60"},{"size":249,"mtime":1607327655445,"results":"96","hashOfConfig":"60"},{"size":1603,"mtime":1608061357789,"results":"97","hashOfConfig":"60"},{"size":1503,"mtime":1607860522971,"results":"98","hashOfConfig":"60"},{"size":3224,"mtime":1607930755844,"results":"99","hashOfConfig":"60"},{"size":296,"mtime":1607857188644,"results":"100","hashOfConfig":"60"},{"size":318,"mtime":1607878253549,"results":"101","hashOfConfig":"60"},{"size":1118,"mtime":1608212600104,"results":"102","hashOfConfig":"60"},{"size":1399,"mtime":1608101602298,"results":"103","hashOfConfig":"60"},{"size":11040,"mtime":1608275158288,"results":"104","hashOfConfig":"60"},{"size":3934,"mtime":1608048366755,"results":"105","hashOfConfig":"60"},{"size":443,"mtime":1608061146186,"results":"106","hashOfConfig":"60"},{"size":565,"mtime":1608310490254,"results":"107","hashOfConfig":"60"},{"size":1924,"mtime":1608205381046,"results":"108","hashOfConfig":"60"},{"size":9118,"mtime":1608237481001,"results":"109","hashOfConfig":"60"},{"size":1289,"mtime":1608237243575,"results":"110","hashOfConfig":"60"},{"size":5903,"mtime":1608236417640,"results":"111","hashOfConfig":"60"},{"size":1562,"mtime":1608293774380,"results":"112","hashOfConfig":"60"},{"size":1480,"mtime":1608226101669,"results":"113","hashOfConfig":"60"},{"size":7559,"mtime":1608278730443,"results":"114","hashOfConfig":"60"},{"size":7562,"mtime":1608313933352,"results":"115","hashOfConfig":"60"},{"size":2223,"mtime":1608298560930,"results":"116","hashOfConfig":"60"},{"size":937,"mtime":1608310510314,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1u71inl",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\index.js",[],["243","244"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\store.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\App.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Header.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\reducers\\userReducers.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Footer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\LandingScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyCourseScreen.js",["245"],"import React,{ useEffect, useState, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CourseTableOfContent from '../components/Course/CourseTableOfContent'\r\nimport CourseRecap from '../components/Course/CourseRecap'\r\nimport COURSES from '../courses/courses'\r\nimport { camelCaseToString } from '../utils/utils';\r\nimport { Course } from '../utils/course';\r\nimport { completeSection } from '../actions/courseActions';\r\nimport CourseHeader from '../components/Course/CourseHeader'\r\nimport CourseNav from '../components/Course/CourseNav'\r\n\r\nexport default function AcademyCourseScreen(props) {\r\n\r\n    const courseContainer = useRef()\r\n    const academySections = useRef()\r\n\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState({sections:[]})\r\n    const dispatch = useDispatch()\r\n    const userSignin = useSelector(state => state.userSignin)\r\n    const { userInfo } = userSignin\r\n\r\n    useEffect(() => {\r\n        let courseContent = COURSES.find(item => item.name===id)\r\n        if(!courseContent) props.history.push(\"/academy\")\r\n\r\n        let courseIndex = COURSES.findIndex(item => item.name===id)\r\n        let nextCourse = COURSES[courseIndex+1]?COURSES[courseIndex+1].name:null\r\n        courseContent.nextCourse = nextCourse\r\n        if(courseContent){\r\n            let updatedCourse = new Course(courseContent,userInfo)\r\n            updatedCourse.moveToStart()\r\n            setCourse({...updatedCourse})     \r\n            \r\n        }\r\n    }, [id,userInfo])\r\n\r\n    const handleNavigate=(direction,status)=>{\r\n        course.navigate(direction,status,course,setCourse)\r\n    }\r\n\r\n    const completeSectionHandler=(id,score)=>{     \r\n        let completedArticle = course.complete(id,score,course,setCourse)\r\n        dispatch(completeSection(completedArticle))\r\n    }\r\n\r\n    let sections = []\r\n\r\n    course.sections.forEach(item =>{\r\n        let Section = item.component\r\n        sections.push(Section)\r\n    })\r\n\r\n    return (\r\n        <div className='academyCourseScreen'>     \r\n            <CourseHeader header={camelCaseToString(id)} moveTo={handleNavigate} course={course}/>\r\n            <div className='courseContainer' ref={courseContainer} id='courseContainer'>\r\n                <CourseNav moveTo={handleNavigate} course={course}/>\r\n                <div className='academySections' ref={academySections} id={'academySections'} >\r\n                    <CourseTableOfContent course={course} moveTo={handleNavigate}/>\r\n                    {sections.map((Section,index) =>\r\n                        <Section \r\n                            key={course.sections[index].sectionId}\r\n                            section={course.sections[index]} \r\n                            completeSection={completeSectionHandler}\r\n                            moveTo={handleNavigate}\r\n                        />\r\n                    )}\r\n                    <CourseRecap course={course}/>    \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\screens\\AcademyScreen.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\ScreenHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\MaterialIcon.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\userActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\actions\\courseActions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseTableOfContent.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseRecap.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Course\\CourseNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\userConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courses.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\utils.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\course.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\constants\\courseConstants.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionHeader.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\stockMarketCourse.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\investingCourse.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section1.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section1.js",["246"],"import React,{useState,useEffect} from 'react'\r\nimport SectionContainer from '../../../components/Section/SectionContainer'\r\nimport { Line } from 'react-chartjs-2'\r\nimport TextList from '../../../components/Article/TextList'\r\nimport ArticleAccordion from '../../../components/Article/ArticleAccordion'\r\nimport { lineChartOptions, assetChartOptions } from '../../../utils/chartOptions'\r\nimport InputGroup from '../../../components/Example/InputGroup'\r\nimport { formatNumber } from '../../../utils/utils';\r\nimport { colors } from '../../../utils/colors'\r\nimport ResultCard from '../../../components/Example/ResultCard'\r\nimport ExerciseQuiz from '../../../components/Exercise/ExcersiseQuiz';\r\n\r\nexport default function AssetsAndLiabilities({section,completeSection,moveTo}){ \r\n\r\n    const questions=[\r\n        {id:1,question:'Bond is asset',options:['True','False','Both'],answer:'True',userAnswer:null},\r\n        {id:2,question:'Car is',options:['Asset','Liability','None'],answer:'Liability',userAnswer:null},\r\n        {id:3,question:'Reinvesting dividends accelerates compounding',options:['True','False'],answer:'True',userAnswer:null},\r\n        {id:4,question:'Stock is',options:['Asset','Liability'],answer:'Asset',userAnswer:null},\r\n        {id:5,question:'Car insurance is',options:['Variable Cost','Fixed Cost'],answer:'Fixed Cost',userAnswer:null},\r\n        {id:6,question:'Car gas is',options:['Variable Cost','Fixed Cost','Temperary Cost'],answer:'Variable Cost',userAnswer:null},\r\n        {id:7,question:'Boat is',options:['Asset','Liability'],answer:'Liability',userAnswer:null},            \r\n    ]\r\n\r\n    const sectionComponents = [\r\n        {name:'OverView',article: OverView},\r\n        {name:'Asset',article: Asset},\r\n        {name:'Liability',article: Liability},\r\n        {name:'Exercise',article:ExerciseQuiz,props:{section,completeSection,questions}}\r\n    ]\r\n\r\n    return(\r\n        <SectionContainer \r\n            sectionComponents={sectionComponents} \r\n            section={section} \r\n            completeSection={completeSection}\r\n            moveTo={moveTo}\r\n        />\r\n    )\r\n}\r\n\r\nfunction OverView(){\r\n    const [startDemo,setStartDemo] = useState(false)\r\n    const [options,setOptions] = useState({})\r\n    const [chartData,setChartData] = useState({\r\n        assetData:[],\r\n        liabilityData:[],\r\n        labels:[],\r\n        interest:0,\r\n        totalLiability:0,\r\n        depreciation:0,\r\n        gas:0,\r\n        insurance:0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        \r\n        let newLabels = []\r\n        let data=[]\r\n\r\n        for(var i=0;i<120;i+=3){\r\n            let date = new Date()\r\n            date.setMonth(date.getMonth() + i);\r\n            let year=date.getFullYear()\r\n            let month = date.getMonth()\r\n            newLabels.push(month+'/'+year)\r\n            data.push(1000+(i*100))\r\n        }\r\n        setChartData({...chartData,labels:newLabels})\r\n        setOptions(lineChartOptions)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    const data = {\r\n        labels: chartData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Asset (6% annual interest)',\r\n            fill: false,\r\n            borderColor: 'rgba(115, 222, 146,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.assetData,\r\n          },\r\n          {\r\n            label: 'Liability (car)',\r\n            fill: false,\r\n            borderColor: 'rgba(222, 115, 115,1)',\r\n            pointRadius: 0,\r\n            pointHitRadius: 0,\r\n            data: chartData.liabilityData,\r\n          }\r\n        ]\r\n      };\r\n\r\n    const demoStartHandler=()=>{\r\n\r\n        setStartDemo(true)\r\n\r\n        let asset = 10000\r\n        let liability = 10000\r\n        let gas = 0\r\n        let insurance = 0\r\n\r\n        for(let i=0; i<=120; i+=3) {\r\n            setTimeout(() => {\r\n                let assetDataCopy=[...chartData.assetData]\r\n                let liabilityDataCopy=[...chartData.liabilityData]\r\n                assetDataCopy.push(asset)\r\n                liabilityDataCopy.push(liability+gas+insurance)\r\n\r\n                setChartData({\r\n                    ...chartData,\r\n                    assetData:assetDataCopy,\r\n                    liabilityData:liabilityDataCopy,\r\n                    interest:asset-10000,\r\n                    totalLiability:liability+gas+insurance,\r\n                    depreciation:liability-10000,\r\n                    gas,\r\n                    insurance\r\n                })\r\n                asset*=1.015\r\n                liability-=liability*0.025\r\n                gas-=375\r\n                insurance-=225\r\n            }, 30 * i);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div>\r\n            <TextList\r\n                content={[\r\n                    {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    {header:'Liabilities',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    {buttons:[{text:'Demonstrate',onClick:demoStartHandler}]}\r\n                ]}\r\n            />\r\n            </div>\r\n            {startDemo &&\r\n            <>\r\n            <div>\r\n                <div className='chartContainer'>\r\n                    <Line data={data} options={options} />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='aalDemoResult'>\r\n                <h3>Asset vs liability in 10 years</h3>\r\n                <ul >\r\n                    <li>\r\n                        <h3>Asset</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Initial Investment:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Interest (6% year): </p> \r\n                                <p>{chartData.interest.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.interest+10000).toFixed(2)}</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Liability</h3>\r\n                        <ul className='list'>\r\n                            <li>\r\n                                <p>Car price:</p> \r\n                                <p>{(10000).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Depreciation (10% year): </p> \r\n                                <p>{chartData.depreciation.toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Gas (1500$ year : </p> \r\n                                <p>{(chartData.gas).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Insurance (900$ year): </p> \r\n                                <p>{(chartData.insurance).toFixed(2)}</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Total: </p> \r\n                                <h3>{(chartData.totalLiability).toFixed(2)}</h3>\r\n                            </li>                        \r\n                        </ul>\r\n                    </li>\r\n                </ul>                \r\n            </div>     \r\n            </>   \r\n            }                 \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Asset(){\r\n\r\n    const [chartData,setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Deposits',\r\n                data: [],\r\n                backgroundColor: colors.secondaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,                \r\n                borderWidth: 1\r\n            },\r\n            {\r\n                label: 'Interest',\r\n                data: [],\r\n                backgroundColor: colors.positiveColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1\r\n            },\r\n            {\r\n                type:'bar',\r\n                label: 'Yearly Interest',\r\n                data: [],\r\n                backgroundColor: colors.primaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                barPercentage: 0.6\r\n                \r\n            }\r\n        ]\r\n    })\r\n\r\n    const [inputs,setInputs] = useState({\r\n        startingInvestment:{value:10000,type:'slider',min:0,max:100000,step:1000,format:'€'},\r\n        annualReturn:{value:7,type:'slider',min:0,max:20,step:0.5,format:'%'},\r\n        monthlyDeposits:{value:200,type:'slider',min:0,max:2000,step:50,format:'€'},\r\n        timePeriod:{value:10,type:'slider',min:1,max:30,step:1,format:'Y'},\r\n    })\r\n\r\n    const [results,setResults] = useState({\r\n        deposits:0,\r\n        interest:0,\r\n        total:0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let newLabels = []\r\n        let data=[]\r\n        let depositData=[]\r\n        let interestData=[]\r\n        let yearlyInterestData=[]\r\n        let startingValue = inputs.startingInvestment.value\r\n        const annualReturn = inputs.annualReturn.value\r\n        const monthlyDeposits = inputs.monthlyDeposits.value\r\n        const timePeriod = inputs.timePeriod.value\r\n        let deposits = startingValue\r\n        \r\n        for(var i=0;i<timePeriod;i++){\r\n            let label = `Year ${i}`\r\n            if(i===0) label=''\r\n            newLabels.push(label)\r\n            startingValue+=(monthlyDeposits*12) \r\n            deposits+=(monthlyDeposits*12)\r\n            startingValue*=((annualReturn/100)+1)          \r\n            data.push(startingValue)\r\n            depositData.push(deposits)\r\n            interestData.push(startingValue-deposits)\r\n            yearlyInterestData.push(startingValue*((annualReturn/100)+1)-startingValue)\r\n        }\r\n       \r\n        let total = data[data.length-1]\r\n        const chartCopy=chartData\r\n        chartCopy.datasets[0].data=depositData\r\n        chartCopy.datasets[1].data=interestData\r\n        chartCopy.datasets[2].data=yearlyInterestData\r\n        setChartData({...chartCopy,labels:newLabels})\r\n        setResults({\r\n            deposits:formatNumber(deposits,'€'),\r\n            interest:formatNumber((total-deposits),'€'),\r\n            total:formatNumber(total,'€')\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputs])\r\n\r\n    const content = [\r\n        {header:'Compound Interest',text:'Compound interest is result of reinvesting interest rather than paying it out.'},\r\n        {header:'ReInvesting',text:'Reinvesting dividends and interest fastens the compounding effect'},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div> \r\n                <TextList\r\n                    content={[\r\n                        {header:'Assets',text:'Assets generate income and make you wealthier  even though you dont need use time and energy. Assets include items like stocks, bonds, real estate etc that generate passive income.'},\r\n                    ]}\r\n                /> \r\n                <ArticleAccordion content={content}/>\r\n            </div>\r\n            <div className='chartContainer'>\r\n                <Line data={chartData} options={assetChartOptions(true)} />\r\n            </div>\r\n            <div className='example'>                \r\n                <InputGroup header={'Asset example'} inputs={inputs} setInputs={setInputs}/>\r\n                <ResultCard header={`Result after ${inputs.timePeriod.value} years`} value={results.total} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Liability(){\r\n\r\n    const [chartData,setChartData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Car value',\r\n                data: [],\r\n                backgroundColor: 'rgba(82, 103, 122,0.5)',\r\n                pointRadius:0,\r\n                pointHitRadius:0,                \r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Gas',\r\n                data: [],\r\n                backgroundColor: colors.negativeColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Insurance',\r\n                data: [],\r\n                backgroundColor: colors.negativeColor1,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 1,\r\n                stack: 1,\r\n            },\r\n            {\r\n                label: 'Total Cost',\r\n                data: [],\r\n                borderColor:colors.secondaryColor,\r\n                pointRadius:0,\r\n                pointHitRadius:0,\r\n                borderWidth: 3,\r\n                fill:false,\r\n                stack: 2,\r\n            }\r\n        ]\r\n    })\r\n\r\n    const [inputs,setInputs] = useState({\r\n        carPrice:{value:10000,type:'slider',min:0,max:100000,step:1000,format:'€'},\r\n        depreciationPerYear:{value:10,type:'slider',min:0,max:30,step:0.5,format:'%'},\r\n        gasPerYear:{value:1200,type:'slider',min:0,max:5000,step:50,format:'€'},\r\n        insuranceCostPerYear:{value:900,type:'slider',min:0,max:2000,step:50,format:'€'},\r\n    })\r\n\r\n    const [results,setResults] = useState({\r\n        totalCost:0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let carPrice= inputs.carPrice.value\r\n        let depreciationPerYear = inputs.depreciationPerYear.value\r\n        let gasPerYear = inputs.gasPerYear.value\r\n        let insuranceCostPerYear = inputs.insuranceCostPerYear.value\r\n\r\n        let newLabels = []        \r\n        let liability = carPrice\r\n        let gas = -0.1\r\n        let insurance = -0.1\r\n        let liabilityData = []\r\n        let gasData = []\r\n        let insuranceData = []\r\n        let total=[]\r\n\r\n        for(let i=0; i<=10; i++) {\r\n            let label = `Year ${i}`\r\n            if(i===0) label=''\r\n            newLabels.push(label)\r\n            liabilityData.push(liability)\r\n            gasData.push(gas)\r\n            insuranceData.push(insurance)\r\n            total.push(-(carPrice-liability)+gas+insurance-gas)\r\n            liability-=liability*(depreciationPerYear/100)\r\n            gas-=gasPerYear\r\n            insurance-=insuranceCostPerYear\r\n            insurance-=gasPerYear         \r\n        }\r\n\r\n        const chartCopy={...chartData}\r\n        chartCopy.datasets[0].data=liabilityData\r\n        chartCopy.datasets[1].data=gasData\r\n        chartCopy.datasets[2].data=insuranceData\r\n        chartCopy.datasets[3].data=total\r\n        setChartData({...chartCopy,labels:newLabels})\r\n        let totalCost = total[total.length-1]\r\n        setResults({\r\n            totalCost:formatNumber(totalCost,'€'),\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputs])\r\n\r\n    const content = [\r\n        {header:'Depreciation',text:'Decrease of item value'},\r\n        {header:'Fixed Cost',text:''},\r\n        {header:'Variable Cost',text:''},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid'>\r\n            <div> \r\n                <TextList\r\n                    content={[\r\n                        {header:'Assets',text:'Liabilities loses value over time, for example cars, boats motorcycles. Liabilities loses value over time, for example it needs maintenence, fuel etc.'},\r\n                    ]}\r\n                /> \r\n                <ArticleAccordion content={content}/>\r\n            </div>\r\n            <div className='chartContainer'>\r\n                <Line data={chartData} options={assetChartOptions(false)} />\r\n            </div>\r\n            <div className='example'>                \r\n                <InputGroup header={'Liability (Car)'} inputs={inputs} setInputs={setInputs}/>\r\n                <ResultCard header={`Total costs in 10 years`} value={results.totalCost} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section2.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Section\\SectionContainer.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\DragAndDrop.js",[],["247","248"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleExerciseStats.js",[],["249","250"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleQuestionnary.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\TextList.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\sectionNav.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\TrainingStatus.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordion.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\chartOptions.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\InputGroup.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\utils\\colors.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ResultCard.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseCompleted.js",["251"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExerciseScore from './ExerciseScore'\r\nimport { ArticleButton } from '../Other/Buttons'\r\nimport { ArticleButtonPrimary } from '../Other/Buttons'\r\n\r\n\r\nexport default function ExerciseCompleted({section,tryAgain,moveTo}) {\r\n\r\n    const moveToHandler=()=>{\r\n        if(moveTo){\r\n            moveTo('next')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Card className='exerciseCompleted'>\r\n            <div className='exerciseCompletedHeader'>\r\n                <h2>Exercise Completed</h2>\r\n                <Chip label={`Completed ${section.completedAt.replaceAll('/','.')}`} variant=\"outlined\" />\r\n            </div>\r\n            <ExerciseScore section={section}/>\r\n            <div className='exerciseCompletedFooter'>\r\n                <Button onClick={tryAgain} color=\"primary\" variant=\"outlined\">Try Again</Button>\r\n                <ArticleButtonPrimary onClick={moveToHandler}text='Next section' />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExerciseScore.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Exercise\\ExcersiseQuiz.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleAccordionDetails.js",["252","253","254","255","256"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Article\\ArticleTerm.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Sliders.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\ShowMore.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section2.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\ShareExample.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section3.js",["257"],"import React,{ useEffect } from 'react'\r\nimport SectionContainer from '../../../components/Section/SectionContainer'\r\nimport TextList from '../../../components/Article/TextList'\r\nimport Table from '../../../components/Other/Table'\r\nimport ExcersiseQuiz from '../../../components/Exercise/ExcersiseQuiz'\r\n\r\nexport default function StockMarket({section,completeSection,moveTo}){\r\n\r\n    const questions=[\r\n        {\r\n            question:'In which country Nasdaq-stock exhange is located',\r\n            options:['Germany','Japan','United States'],           \r\n            answer:'United States',\r\n        },          \r\n        {\r\n            question:'Which region has the biggest stock exhanges by market cap',\r\n            options:['Shanghai','United States','Japan'],           \r\n            answer:'United States',\r\n        },       \r\n        {\r\n            question:'Stock market is only for the instutional investors',\r\n            options:['True','False'],           \r\n            answer:'False',\r\n        },       \r\n        {\r\n            question:'Select correct region for Nikkei index',\r\n            options:['South Korea','Taiwan','Japan'],           \r\n            answer:'Japan',\r\n        },        \r\n        {\r\n            question:'IPO is correct term company issuing shares first time in stock exhange',\r\n            options:['True','False'],           \r\n            answer:'True',\r\n        },             \r\n        {\r\n            question:'Select correct region for Dax index',\r\n            options:['Germany','South Korea','United States'],           \r\n            answer:'Germany',\r\n        },          \r\n        {\r\n            question:'Index is a group securities tracked in a standardized way',\r\n            options:['True','False'],           \r\n            answer:'True',\r\n        },          \r\n    ]\r\n\r\n    const sectionComponents = [\r\n        {name: 'Overview', article: Overview},\r\n        {name: 'Stock Exhanges', article:StockExhanges},\r\n        {name: 'Indexes', article:Indexes},\r\n        {name: 'Excercise', article:ExcersiseQuiz,props:{section,completeSection,questions}}\r\n    ]\r\n\r\n    return(\r\n        <SectionContainer \r\n            sectionComponents={sectionComponents} \r\n            section={section} \r\n            completeSection={completeSection}\r\n            moveTo={moveTo}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Indexes(){\r\n\r\n    const indexes = [\r\n        {name:'Dow Jones',symbol:'DJI',region:'United States',\"marketCap(inTrillions)\":8.3},\r\n        {name:'S&P 500',symbol:'GSPC',region:'United States',\"marketCap(inTrillions)\":23},\r\n        {name:'Nasdaq',symbol:'IXIC',region:'United States',\"marketCap(inTrillions)\":20},\r\n        {name:'FTSE',symbol:'FTSE 100',region:'United Kingdom',\"marketCap(inTrillions)\":1.8},\r\n        {name:'Nikkei',symbol:'N225',region:'Japan',\"marketCap(inTrillions)\":5},\r\n        {name:'Shanghai Composite',symbol:'SSEC',region:'China',\"marketCap(inTrillions)\":5},\r\n        {name:'DAX',symbol:'GDAXI',region:'Germany',\"marketCap(inTrillions)\":1},\r\n        {name:'KOSPI',symbol:'KS11',region:'South Korea',\"marketCap(inTrillions)\":1.3},\r\n        {name:'Taiwan Weighted',symbol:'TWII',region:'Taiwan',\"marketCap(inTrillions)\":''},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid1'>\r\n            <h2>Major Indexes</h2>\r\n            <Table table={indexes}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction StockExhanges(){\r\n\r\n    const stockExhanges = [\r\n        {name:'New York Stock Exchange',symbol:'NYSE',region:'United States',\"marketCap(inTrillions)\":22.9},\r\n        {name:'Nasdaq',symbol:'NASDAQ',region:'United States',\"marketCap(inTrillions)\":10.8},\r\n        {name:'Japan Exchange Group',symbol:'JPX',region:'Japan',\"marketCap(inTrillions)\":5.6},\r\n        {name:'London Stock Exchange',symbol:'LSE',region:'United Kingdom',\"marketCap(inTrillions)\":4.5},\r\n        {name:'Shanghai Stock Exchange',symbol:'SSE',region:'China',\"marketCap(inTrillions)\":4},\r\n        {name:'Hong Kong Stock Exchange',symbol:'SEHK',region:'Hong Kong',\"marketCap(inTrillions)\":3.9},\r\n        {name:'Euronext',symbol:'',region:'European Union',\"marketCap(inTrillions)\":3.9},\r\n        {name:'Toronto Stock Exchange',symbol:'TSX',region:'Canada',\"marketCap(inTrillions)\":3.2},\r\n        {name:'Bombay Stock Exchange',symbol:'BSE',region:'India',\"marketCap(inTrillions)\":2},\r\n    ]\r\n\r\n    return(\r\n        <div className='sectionGrid1'>\r\n            <h2>Major Stock Exhanges</h2>\r\n            <Table table={stockExhanges}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Overview(){\r\n    return(\r\n        <div className='sectionGrid3'>\r\n            <TextList\r\n                className='gridItemWide'\r\n                content={[\r\n                    {\r\n                        header:'Stock Market',\r\n                        text:'Stock market is a market place institutional and individual investors can buy and sell shares of a company'\r\n                    },\r\n                    {\r\n                        header:'Stock Exhange',\r\n                        text:'Stock market is made of exhanges just as New York Stock Exchange (NYSE) and the Nasdaq'\r\n                    },\r\n                    {\r\n                        header:'Initial Public Offering',\r\n                        text:'Initial Public Offering (IPO) refers to company issuing new shares to list its shares in the stock exhange. This allows company to raise capital or previos owners to sell their share to public markets',\r\n                    },\r\n                    {\r\n                        header:'Index',\r\n                        text:'Index is basket of securities grouped together to track performance of that group in a standardized way. Indexed are often used as benchmark to see how to market is doing. One example of a index is S&P500 which tracks the performance of 500 biggest companies in the USA',\r\n                    },\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Buttons.js",["258","259"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nexport function ArticleButton({text,onClick,disabled=false}) {\r\n    return <Button \r\n        variant=\"outlined\"\r\n        onClick={onClick}\r\n        size='large'\r\n        disabled={disabled}\r\n        >\r\n            {text}\r\n        </Button>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor:'var(--secondary-color)',\r\n        color:'var(--text-light)',\r\n        borderColor:'var(--primary-color)',\r\n        \"&:hover\": {\r\n            // color:'dimgray',\r\n            backgroundColor:'var(--primary-color)',\r\n        }\r\n    },\r\n  }));\r\n\r\nexport function ArticleButtonPrimary({text,onClick}) {\r\n    const classes = useStyles();\r\n    return <Button\r\n        className={classes.root}\r\n        variant=\"outlined\"\r\n        onClick={onClick}\r\n        size='large'\r\n        >\r\n            {text}\r\n        </Button>\r\n}\r\n\r\nexport function DeleteButton({deleteItem}){\r\n    const handleDelete = () => {\r\n        deleteItem()\r\n        console.info('You clicked the delete icon.');\r\n    };\r\n    const classes = useStyles();\r\n    return(\r\n        <Chip\r\n            className={'quitButton'}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Quit\"\r\n            onDelete={handleDelete}\r\n            onClick={handleDelete}\r\n            color=\"secondary\"\r\n      />\r\n\r\n    )\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\Table.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\stockMarket\\Section5.js",[],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\courses\\courseMaterial\\investing\\Section3.js",["260"],"C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Other\\VerticalStepper.js",["261","262","263","264"],"import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport MaterialIcon from '../MaterialIcon'\r\nimport { ArticleButton } from './Buttons';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button:{\r\n    fontSize:'5px'\r\n  }\r\n}));\r\n\r\n\r\nexport default function VerticalLinearStepper({steps}) {\r\n  const classes = useStyles();\r\n  let [activeStep, setActiveStep] = useState(0);\r\n  // const steps = ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep===steps.length-1?activeStep:activeStep+1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep===0?activeStep:activeStep-1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Stepper  className='stepperText' activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((step, index) => (\r\n          <Step key={index}>\r\n            <StepLabel icon={<MaterialIcon icon={step.icon} className='stepperIcon'/>}>\r\n              {step.label}\r\n              {/* <Typography className='stepperContent'>Company Sales</Typography> */}\r\n              \r\n            </StepLabel>\r\n            <StepContent>\r\n              <Typography className='stepperContent'>{step.text}</Typography>\r\n              <div className='stepperButtons'>\r\n                <ArticleButton text='Prev' onClick={handleBack} disabled={activeStep===0}/>\r\n                <ArticleButton text='Next' onClick={handleNext} disabled={activeStep===steps.length-1}/>\r\n              \r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}              \r\n      </Stepper>\r\n    </Card>\r\n  );\r\n}","C:\\Users\\Juha\\Desktop\\Projects\\StonksAcademy\\client\\src\\components\\Example\\BusinessExample.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":37,"column":8,"nodeType":"271","endLine":37,"endColumn":21,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":106,"column":24,"nodeType":"275","messageId":"276","endLine":126,"endColumn":14},{"ruleId":"265","replacedBy":"277"},{"ruleId":"267","replacedBy":"278"},{"ruleId":"265","replacedBy":"279"},{"ruleId":"267","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":6,"column":10,"nodeType":"283","messageId":"284","endLine":6,"endColumn":23},{"ruleId":"281","severity":1,"message":"285","line":3,"column":8,"nodeType":"283","messageId":"284","endLine":3,"endColumn":12},{"ruleId":"281","severity":1,"message":"286","line":7,"column":8,"nodeType":"283","messageId":"284","endLine":7,"endColumn":24},{"ruleId":"281","severity":1,"message":"287","line":10,"column":8,"nodeType":"283","messageId":"284","endLine":10,"endColumn":12},{"ruleId":"281","severity":1,"message":"288","line":11,"column":8,"nodeType":"283","messageId":"284","endLine":11,"endColumn":14},{"ruleId":"281","severity":1,"message":"289","line":12,"column":8,"nodeType":"283","messageId":"284","endLine":12,"endColumn":15},{"ruleId":"281","severity":1,"message":"290","line":1,"column":16,"nodeType":"283","messageId":"284","endLine":1,"endColumn":25},{"ruleId":"281","severity":1,"message":"291","line":5,"column":8,"nodeType":"283","messageId":"284","endLine":5,"endColumn":24},{"ruleId":"281","severity":1,"message":"292","line":47,"column":11,"nodeType":"283","messageId":"284","endLine":47,"endColumn":18},{"ruleId":"281","severity":1,"message":"290","line":1,"column":24,"nodeType":"283","messageId":"284","endLine":1,"endColumn":33},{"ruleId":"281","severity":1,"message":"288","line":7,"column":8,"nodeType":"283","messageId":"284","endLine":7,"endColumn":14},{"ruleId":"281","severity":1,"message":"293","line":8,"column":8,"nodeType":"283","messageId":"284","endLine":8,"endColumn":13},{"ruleId":"281","severity":1,"message":"294","line":10,"column":8,"nodeType":"283","messageId":"284","endLine":10,"endColumn":18},{"ruleId":"281","severity":1,"message":"295","line":38,"column":9,"nodeType":"283","messageId":"284","endLine":38,"endColumn":20},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["298"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'asset', 'liability', 'gas', 'insurance', 'asset', 'liability', 'gas', 'insurance', 'liability', 'gas', 'insurance', 'asset', 'liability', 'liability', 'gas', 'insurance'.","ArrowFunctionExpression","unsafeRefs",["296"],["297"],["296"],["297"],"no-unused-vars","'ArticleButton' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'AccordionActions' is defined but never used.","'Chip' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'useEffect' is defined but never used.","'HighlightOffIcon' is defined but never used.","'classes' is assigned a value but never used.","'Paper' is defined but never used.","'AcUnitIcon' is defined but never used.","'handleReset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},"Update the dependencies array to be: [id, props.history, userInfo]",{"range":"301","text":"302"},[1544,1557],"[id, props.history, userInfo]"]